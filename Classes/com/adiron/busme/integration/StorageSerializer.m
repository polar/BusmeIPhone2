//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/src/main/java/com/adiron/busme/integration/StorageSerializer.java
//
//  Created by polar on 5/25/13.
//

#import "IOSClass.h"
#import "com/adiron/busme/api/Storage.h"
#import "com/adiron/busme/integration/StorageSerializer.h"
#import "com/adiron/busme/platform/ExternalStorage.h"
#import "com/adiron/busme/platform/Log.h"
#import "java/io/File.h"
#import "java/io/FileInputStream.h"
#import "java/io/FileNotFoundException.h"
#import "java/io/FileOutputStream.h"
#import "java/io/IOException.h"

@implementation ComAdironBusmeIntegrationStorageSerializer

static NSString * ComAdironBusmeIntegrationStorageSerializer_LOGTAG_;

- (NSString *)defaultFileName {
  return defaultFileName_;
}
- (void)setDefaultFileName:(NSString *)defaultFileName {
  JreOperatorRetainedAssign(&defaultFileName_, defaultFileName);
}
@synthesize defaultFileName = defaultFileName_;
- (id)defaultAPI {
  return defaultAPI_;
}
- (void)setDefaultAPI:(id)defaultAPI {
  JreOperatorRetainedAssign(&defaultAPI_, defaultAPI);
}
@synthesize defaultAPI = defaultAPI_;

+ (NSString *)LOGTAG {
  return ComAdironBusmeIntegrationStorageSerializer_LOGTAG_;
}

- (id)initWithNSString:(NSString *)fileName
                withId:(id)api {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&defaultFileName_, fileName);
    JreOperatorRetainedAssign(&defaultAPI_, api);
  }
  return self;
}

- (id)getAPI {
  return defaultAPI_;
}

- (ComAdironBusmeApiStorage *)retrieveStorage {
  return [self retrieveStorageWithNSString:defaultFileName_ withId:defaultAPI_];
}

- (void)cacheStorageWithId:(ComAdironBusmeApiStorage *)store {
  [self cacheStorageWithId:store withNSString:defaultFileName_ withId:defaultAPI_];
}

- (NSString *)legalizeWithNSString:(NSString *)filename {
  return [[[NIL_CHK(filename) replace:@" " withSequence:@"_"] replace:@"/" withSequence:@"-"] replace:@"*" withSequence:@"."];
}

- (ComAdironBusmeApiStorage *)retreiveWithNSString:(NSString *)fileName {
  return [self retrieveStorageWithNSString:fileName withId:nil];
}

- (ComAdironBusmeApiStorage *)retrieveStorageWithNSString:(NSString *)fileName
                                                   withId:(id)api {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeIntegrationStorageSerializer_LOGTAG_ withNSString:[NSString stringWithFormat:@"retrieveStorage: %@", fileName]];
  if ([ComAdironBusmePlatformExternalStorage isExternalStorageAvailable]) {
    JavaIoFile *file = [ComAdironBusmePlatformExternalStorage getExternalStorageDirectory];
    JavaIoFile *f = [[[JavaIoFile alloc] initWithJavaIoFile:file withNSString:@"Android"] autorelease];
    f = [[[JavaIoFile alloc] initWithJavaIoFile:f withNSString:@"data"] autorelease];
    f = [[[JavaIoFile alloc] initWithJavaIoFile:f withNSString:@"com.adiron.busme"] autorelease];
    f = [[[JavaIoFile alloc] initWithJavaIoFile:f withNSString:@"cache"] autorelease];
    f = [[[JavaIoFile alloc] initWithJavaIoFile:f withNSString:[self legalizeWithNSString:fileName]] autorelease];
    JavaIoFileInputStream *fin;
    @try {
      fin = [[[JavaIoFileInputStream alloc] initWithJavaIoFile:f] autorelease];
      return nil;
    }
    @catch (JavaIoFileNotFoundException *e) {
      [ComAdironBusmePlatformLog eWithNSString:ComAdironBusmeIntegrationStorageSerializer_LOGTAG_ withNSString:[NSString stringWithFormat:@"retrieveStorage: %@", [((JavaIoFileNotFoundException *) NIL_CHK(e)) getMessage]]];
    }
    @catch (JavaIoIOException *e) {
      [ComAdironBusmePlatformLog eWithNSString:ComAdironBusmeIntegrationStorageSerializer_LOGTAG_ withNSString:[NSString stringWithFormat:@"retrieveStorage: %@", [((JavaIoIOException *) NIL_CHK(e)) getMessage]]];
    }
  }
  return nil;
}

- (void)cacheStorageWithId:(ComAdironBusmeApiStorage *)store
              withNSString:(NSString *)fileName
                    withId:(id)api {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeIntegrationStorageSerializer_LOGTAG_ withNSString:[NSString stringWithFormat:@"cacheStorage: to %@", fileName]];
  if ([ComAdironBusmePlatformExternalStorage isExternalStorageWriteable]) {
    JavaIoFile *file = [ComAdironBusmePlatformExternalStorage getExternalStorageDirectory];
    JavaIoFile *f = [[[JavaIoFile alloc] initWithJavaIoFile:file withNSString:@"Android"] autorelease];
    f = [[[JavaIoFile alloc] initWithJavaIoFile:f withNSString:@"data"] autorelease];
    f = [[[JavaIoFile alloc] initWithJavaIoFile:f withNSString:@"com.adiron.busme"] autorelease];
    if (![((JavaIoFile *) NIL_CHK(f)) exists]) {
      [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeIntegrationStorageSerializer_LOGTAG_ withNSString:[NSString stringWithFormat:@"cacheStorage: to %@: creating %@", fileName, [((JavaIoFile *) NIL_CHK(f)) getAbsolutePath]]];
      [((JavaIoFile *) NIL_CHK(f)) mkdir];
    }
    f = [[[JavaIoFile alloc] initWithJavaIoFile:f withNSString:@"cache"] autorelease];
    if (![((JavaIoFile *) NIL_CHK(f)) exists]) {
      [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeIntegrationStorageSerializer_LOGTAG_ withNSString:[NSString stringWithFormat:@"cacheStorage: to %@: creating %@", fileName, [((JavaIoFile *) NIL_CHK(f)) getAbsolutePath]]];
      [((JavaIoFile *) NIL_CHK(f)) mkdir];
    }
    f = [[[JavaIoFile alloc] initWithJavaIoFile:f withNSString:[self legalizeWithNSString:fileName]] autorelease];
    JavaIoFileOutputStream *fout;
    @try {
      fout = [[[JavaIoFileOutputStream alloc] initWithJavaIoFile:f] autorelease];
      @synchronized (store) {
        [NIL_CHK(store) preSerializeWithId:api];
      }
      [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeIntegrationStorageSerializer_LOGTAG_ withNSString:[NSString stringWithFormat:@"cacheStorage: successfully wrote %@", fileName]];
    }
    @catch (JavaIoFileNotFoundException *e) {
      [ComAdironBusmePlatformLog eWithNSString:ComAdironBusmeIntegrationStorageSerializer_LOGTAG_ withNSString:[NSString stringWithFormat:@"cacheStorage: %@", [((JavaIoFileNotFoundException *) NIL_CHK(e)) getMessage]]];
    }
    @catch (JavaIoIOException *e) {
      [ComAdironBusmePlatformLog eWithNSString:ComAdironBusmeIntegrationStorageSerializer_LOGTAG_ withNSString:[NSString stringWithFormat:@"cacheStorage: %@", [((JavaIoIOException *) NIL_CHK(e)) getMessage]]];
      [((JavaIoIOException *) NIL_CHK(e)) printStackTrace];
    }
  }
}

+ (void)initialize {
  if (self == [ComAdironBusmeIntegrationStorageSerializer class]) {
    JreOperatorRetainedAssign(&ComAdironBusmeIntegrationStorageSerializer_LOGTAG_, [[IOSClass classWithClass:[ComAdironBusmeIntegrationStorageSerializer class]] getName]);
  }
}

- (void)dealloc {
  JreOperatorRetainedAssign(&defaultAPI_, nil);
  JreOperatorRetainedAssign(&defaultFileName_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmeIntegrationStorageSerializer *typedCopy = (ComAdironBusmeIntegrationStorageSerializer *) copy;
  typedCopy.defaultFileName = defaultFileName_;
  typedCopy.defaultAPI = defaultAPI_;
}

@end
