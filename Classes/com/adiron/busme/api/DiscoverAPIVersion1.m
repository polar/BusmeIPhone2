//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/src/main/java/com/adiron/busme/api/DiscoverAPIVersion1.java
//
//  Created by polar on 5/25/13.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "com/adiron/busme/api/APIBase.h"
#import "com/adiron/busme/api/DiscoverAPIVersion1.h"
#import "com/adiron/busme/api/Master.h"
#import "com/adiron/busme/integration/http/HttpEntity.h"
#import "com/adiron/busme/platform/GeoCalc.h"
#import "com/adiron/busme/platform/Log.h"
#import "java/io/IOException.h"
#import "java/lang/Double.h"
#import "java/lang/Exception.h"
#import "java/lang/Float.h"
#import "java/lang/IllegalArgumentException.h"
#import "java/lang/Math.h"
#import "java/util/ArrayList.h"
#import "java/util/Iterator.h"
#import "java/util/List.h"
#import "java/util/Map.h"

@implementation ComAdironBusmeApiDiscoverAPIVersion1

static NSString * ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_;

- (NSString *)initialUrl {
  return initialUrl_;
}
- (void)setInitialUrl:(NSString *)initialUrl {
  JreOperatorRetainedAssign(&initialUrl_, initialUrl);
}
@synthesize initialUrl = initialUrl_;
- (NSString *)discoverUrl {
  return discoverUrl_;
}
- (void)setDiscoverUrl:(NSString *)discoverUrl {
  JreOperatorRetainedAssign(&discoverUrl_, discoverUrl);
}
@synthesize discoverUrl = discoverUrl_;
- (NSString *)masterUrl {
  return masterUrl_;
}
- (void)setMasterUrl:(NSString *)masterUrl {
  JreOperatorRetainedAssign(&masterUrl_, masterUrl);
}
@synthesize masterUrl = masterUrl_;

+ (NSString *)LOGTAG {
  return ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_;
}

- (NSString *)getInitialUrl {
  return initialUrl_;
}

- (NSString *)getDiscoverUrl {
  return discoverUrl_;
}

- (NSString *)getMasterUrl {
  return masterUrl_;
}

- (id)initWithNSString:(NSString *)initialUrl {
  if ((self = [super init])) {
    self.initialUrl = initialUrl;
  }
  return self;
}

+ (ComAdironBusmeApiDiscoverAPIVersion1 *)getInstanceWithNSString:(NSString *)url {
  return [[[ComAdironBusmeApiDiscoverAPIVersion1 alloc] initWithNSString:url] autorelease];
}

- (BOOL)get {
  @try {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"Opening %@", initialUrl_]];
    ComAdironBusmeIntegrationHttpHttpEntity *ent = [self openURLWithNSString:initialUrl_];
    ComAdironBusmeApiAPIBase_Tag *tag = [self xmlParseWithComAdironBusmeIntegrationHttpHttpEntity:ent];
    if ([@"API" isEqual:((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(tag)).name]) {
      if ([@"d1" isEqual:((NSString *) [((id<JavaUtilMap>) NIL_CHK(tag.attributes)) getWithId:@"version"])]) {
        JreOperatorRetainedAssign(&discoverUrl_, ((NSString *) [((id<JavaUtilMap>) NIL_CHK(tag.attributes)) getWithId:@"discover"]));
        JreOperatorRetainedAssign(&masterUrl_, ((NSString *) [((id<JavaUtilMap>) NIL_CHK(tag.attributes)) getWithId:@"master"]));
      }
      [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"get: got %@" , tag, nil]];
      return YES;
    }
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"get: got nothing! %@" , tag, nil]];
  }
  @catch (JavaLangIllegalArgumentException *e) {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"Exception%@", [((JavaLangIllegalArgumentException *) NIL_CHK(e)) getMessage]]];
    @throw [[[JavaIoIOException alloc] initWithNSString:[((JavaLangIllegalArgumentException *) NIL_CHK(e)) getMessage]] autorelease];
  }
  @catch (JavaIoIOException *e) {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"Exception%@", e]];
    @throw e;
  }
  @catch (JavaLangException *e) {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"Exception%@", e]];
    @throw [[[JavaIoIOException alloc] initWithNSString:[NSString stringWithFormat:@"Connection error: %@", [((JavaLangException *) NIL_CHK(e)) getMessage]]] autorelease];
  }
  return NO;
}

- (id<JavaUtilList>)discoverWithJavaLangDouble:(JavaLangDouble *)lon
                            withJavaLangDouble:(JavaLangDouble *)lat
                                       withInt:(int)zoomLevel
                                       withInt:(int)width
                                       withInt:(int)height {
  return [self discoverWithJavaLangDouble:lon withJavaLangDouble:lat withInt:zoomLevel withInt:[JavaLangMath minWithInt:width withInt:height]];
}

- (id<JavaUtilList>)discoverWithJavaLangDouble:(JavaLangDouble *)lon
                            withJavaLangDouble:(JavaLangDouble *)lat
                                       withInt:(int)zoomLevel
                                       withInt:(int)minDim {
  JavaLangDouble *feetPerPixel = [JavaLangDouble valueOfWithDouble:[JavaLangMath absWithDouble:ComAdironBusmePlatformGeoCalc_EARTH_RADIUS_FEET * [JavaLangMath cosWithDouble:[((JavaLangDouble *) NIL_CHK(lat)) doubleValue]] / [JavaLangMath powWithDouble:2 withDouble:zoomLevel + 8]]];
  JavaLangDouble *buffer = [JavaLangDouble valueOfWithDouble:[((JavaLangDouble *) NIL_CHK(feetPerPixel)) doubleValue] * (0.80 * minDim)];
  return [self discoverWithJavaLangDouble:lon withJavaLangDouble:lat withJavaLangDouble:buffer];
}

- (id<JavaUtilList>)discoverWithJavaLangDouble:(JavaLangDouble *)lon
                            withJavaLangDouble:(JavaLangDouble *)lat {
  return [self discoverWithJavaLangDouble:lon withJavaLangDouble:lat withJavaLangDouble:[JavaLangDouble valueOfWithDouble:0.0]];
}

- (id<JavaUtilList>)discoverWithJavaLangDouble:(JavaLangDouble *)lon
                            withJavaLangDouble:(JavaLangDouble *)lat
                            withJavaLangDouble:(JavaLangDouble *)buffer {
  @try {
    NSString *url = [NSString stringWithFormat:@"%@?lon=%@&lat=%@&buf=%@" , [self getDiscoverUrl], lon, lat, buffer, nil];
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"Opening %@" , url, nil]];
    ComAdironBusmeIntegrationHttpHttpEntity *entity = [self openURLWithNSString:url];
    ComAdironBusmeApiAPIBase_Tag *tag = [self xmlParseWithComAdironBusmeIntegrationHttpHttpEntity:entity];
    id<JavaUtilList> masters = [[[JavaUtilArrayList alloc] init] autorelease];
    if ([@"masters" isEqual:((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(tag)).name]) {
      {
        id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(tag.childNodes)) iterator]);
        while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
          ComAdironBusmeApiAPIBase_Tag *t = ((ComAdironBusmeApiAPIBase_Tag *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
          if ([@"master" isEqual:((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(t)).name]) {
            id<JavaUtilMap> attrs = ((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(t)).attributes;
            ComAdironBusmeApiMaster *m = [[[ComAdironBusmeApiMaster alloc] init] autorelease];
            NSString *node = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(attrs)) getWithId:@"lon"]);
            if (node != nil) {
              ((ComAdironBusmeApiMaster *) NIL_CHK(m)).lon = [JavaLangFloat valueOfWithFloat:[JavaLangFloat parseFloatWithNSString:node]];
            }
            node = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(attrs)) getWithId:@"lat"]);
            if (node != nil) {
              ((ComAdironBusmeApiMaster *) NIL_CHK(m)).lat = [JavaLangFloat valueOfWithFloat:[JavaLangFloat parseFloatWithNSString:node]];
            }
            ((ComAdironBusmeApiMaster *) NIL_CHK(m)).name = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(attrs)) getWithId:@"name"]);
            ((ComAdironBusmeApiMaster *) NIL_CHK(m)).slug = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(attrs)) getWithId:@"slug"]);
            ((ComAdironBusmeApiMaster *) NIL_CHK(m)).apiUrl = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(attrs)) getWithId:@"api"]);
            [((id<JavaUtilList>) NIL_CHK(masters)) addWithId:m];
          }
        }
      }
      return masters;
    }
    @throw [[[JavaIoIOException alloc] initWithNSString:@"No Masters"] autorelease];
  }
  @catch (JavaLangIllegalArgumentException *e) {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"Exception%@", [((JavaLangIllegalArgumentException *) NIL_CHK(e)) getMessage]]];
    @throw [[[JavaIoIOException alloc] initWithNSString:[((JavaLangIllegalArgumentException *) NIL_CHK(e)) getMessage]] autorelease];
  }
  @catch (JavaIoIOException *e) {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"Exception%@", e]];
    @throw e;
  }
}

- (ComAdironBusmeApiMaster *)findMasterWithNSString:(NSString *)slug {
  @try {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"Opening %@", masterUrl_]];
    ComAdironBusmeIntegrationHttpHttpEntity *entity = [self openURLWithNSString:[NSString stringWithFormat:@"%@?slug=%@", masterUrl_, slug]];
    ComAdironBusmeApiAPIBase_Tag *tag = [self xmlParseWithComAdironBusmeIntegrationHttpHttpEntity:entity];
    if (tag != nil && [@"master" isEqual:((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(tag)).name]) {
      id<JavaUtilMap> attrs = ((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(tag)).attributes;
      ComAdironBusmeApiMaster *m = [[[ComAdironBusmeApiMaster alloc] init] autorelease];
      NSString *node = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(attrs)) getWithId:@"lon"]);
      if (node != nil) {
        ((ComAdironBusmeApiMaster *) NIL_CHK(m)).lon = [JavaLangFloat valueOfWithFloat:[JavaLangFloat parseFloatWithNSString:node]];
      }
      node = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(attrs)) getWithId:@"lat"]);
      if (node != nil) {
        ((ComAdironBusmeApiMaster *) NIL_CHK(m)).lat = [JavaLangFloat valueOfWithFloat:[JavaLangFloat parseFloatWithNSString:node]];
      }
      ((ComAdironBusmeApiMaster *) NIL_CHK(m)).name = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(attrs)) getWithId:@"name"]);
      ((ComAdironBusmeApiMaster *) NIL_CHK(m)).slug = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(attrs)) getWithId:@"slug"]);
      ((ComAdironBusmeApiMaster *) NIL_CHK(m)).apiUrl = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(attrs)) getWithId:@"api"]);
      return m;
    }
    return nil;
  }
  @catch (JavaLangIllegalArgumentException *e) {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"Exception%@", [((JavaLangIllegalArgumentException *) NIL_CHK(e)) getMessage]]];
    @throw [[[JavaIoIOException alloc] initWithNSString:[((JavaLangIllegalArgumentException *) NIL_CHK(e)) getMessage]] autorelease];
  }
  @catch (JavaIoIOException *e) {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_ withNSString:[NSString stringWithFormat:@"Exception%@", e]];
    @throw e;
  }
}

+ (void)initialize {
  if (self == [ComAdironBusmeApiDiscoverAPIVersion1 class]) {
    JreOperatorRetainedAssign(&ComAdironBusmeApiDiscoverAPIVersion1_LOGTAG_, [[IOSClass classWithClass:[ComAdironBusmeApiDiscoverAPIVersion1 class]] getName]);
  }
}

- (void)dealloc {
  JreOperatorRetainedAssign(&masterUrl_, nil);
  JreOperatorRetainedAssign(&discoverUrl_, nil);
  JreOperatorRetainedAssign(&initialUrl_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmeApiDiscoverAPIVersion1 *typedCopy = (ComAdironBusmeApiDiscoverAPIVersion1 *) copy;
  typedCopy.initialUrl = initialUrl_;
  typedCopy.discoverUrl = discoverUrl_;
  typedCopy.masterUrl = masterUrl_;
}

@end
