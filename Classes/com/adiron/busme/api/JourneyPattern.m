//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/src/main/java/com/adiron/busme/api/JourneyPattern.java
//
//  Created by polar on 5/25/13.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "com/adiron/busme/api/APIBase.h"
#import "com/adiron/busme/api/JourneyPattern.h"
#import "com/adiron/busme/api/NameId.h"
#import "com/adiron/busme/integration/GeoPoint.h"
#import "com/adiron/busme/platform/GeoCalc.h"
#import "com/adiron/busme/platform/Log.h"
#import "java/lang/Double.h"
#import "java/lang/Exception.h"
#import "java/lang/StringBuffer.h"
#import "java/util/Iterator.h"
#import "java/util/List.h"
#import "java/util/Map.h"

@implementation ComAdironBusmeApiJourneyPattern

static NSString * ComAdironBusmeApiJourneyPattern_LOGTAG_;

- (NSString *)id_ {
  return id__;
}
- (void)setId_:(NSString *)id_ {
  JreOperatorRetainedAssign(&id__, id_);
}
@synthesize id_ = id__;
- (IOSObjectArray *)path {
  return path_;
}
- (void)setPath:(IOSObjectArray *)path {
  JreOperatorRetainedAssign(&path_, path);
}
@synthesize path = path_;
@synthesize distance = distance_;

+ (NSString *)LOGTAG {
  return ComAdironBusmeApiJourneyPattern_LOGTAG_;
}

- (NSString *)getId {
  return id__;
}

- (ComAdironBusmeApiNameId *)getPatternNameId {
  return [[[ComAdironBusmeApiNameId alloc] initWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ id__, id__, @"P", @"1" } count:4 type:[IOSClass classWithClass:[NSString class]]]] autorelease];
}

- (IOSObjectArray *)getPath {
  return path_;
}

- (double)getDistance {
  if (distance_ == -1) {
    distance_ = [ComAdironBusmePlatformGeoCalc getPathDistanceWithComAdironBusmeIntegrationGeoPointArray:path_];
  }
  return distance_;
}

- (ComAdironBusmeIntegrationGeoPoint *)getStartPoint {
  return ((ComAdironBusmeIntegrationGeoPoint *) [((IOSObjectArray *) NIL_CHK(path_)) objectAtIndex:0]);
}

- (ComAdironBusmeIntegrationGeoPoint *)getEndPoint {
  return ((ComAdironBusmeIntegrationGeoPoint *) [((IOSObjectArray *) NIL_CHK(path_)) objectAtIndex:(int) [((IOSObjectArray *) NIL_CHK(path_)) count] - 1]);
}

- (void)setIdWithNSString:(NSString *)id_ {
  self.id_ = id_;
}

- (void)setPathWithComAdironBusmeIntegrationGeoPointArray:(IOSObjectArray *)path {
  self.path = path;
}

- (void)loadParsedXMLWithComAdironBusmeApiAPIBase_Tag:(ComAdironBusmeApiAPIBase_Tag *)n {
  JreOperatorRetainedAssign(&id__, ((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"id"]));
  @try {
    distance_ = [JavaLangDouble parseDoubleWithNSString:((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"distance"])];
  }
  @catch (JavaLangException *e) {
    [ComAdironBusmePlatformLog eWithNSString:ComAdironBusmeApiJourneyPattern_LOGTAG_ withNSString:@"Error in parsing distance of Journey Pattern"];
  }
  if (((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(n)).childNodes != nil) {
    {
      id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(n)).childNodes iterator]);
      while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
        ComAdironBusmeApiAPIBase_Tag *jps = ((ComAdironBusmeApiAPIBase_Tag *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
        if ([NIL_CHK(jps.name) isEqual:@"JPs"]) {
          JreOperatorRetainedAssign(&path_, [self parsePathWithComAdironBusmeApiAPIBase_Tag:jps]);
          [ComAdironBusmePlatformLog ddWithNSString:ComAdironBusmeApiJourneyPattern_LOGTAG_ withNSString:@"parsed: %s" withNSObjectArray:[IOSObjectArray arrayWithType:[IOSClass classWithClass:[NSObject class]] count:1, [self toStringWithComAdironBusmeIntegrationGeoPointArray:path_] ]];
        }
      }
    }
  }
}

- (NSString *)toStringWithComAdironBusmeIntegrationGeoPointArray:(IOSObjectArray *)points {
  JavaLangStringBuffer *buf = [[[JavaLangStringBuffer alloc] init] autorelease];
  [((JavaLangStringBuffer *) NIL_CHK(buf)) appendWithNSString:[NSString stringWithFormat:@"%@.[" , id__, nil]];
  {
    IOSObjectArray *a__ = points;
    int n__ = (int) [((IOSObjectArray *) NIL_CHK(a__)) count];
    for (int i__ = 0; i__ < n__; i__++) {
      ComAdironBusmeIntegrationGeoPoint *p = ((ComAdironBusmeIntegrationGeoPoint *) [((IOSObjectArray *) NIL_CHK(a__)) objectAtIndex:i__]);
      [((JavaLangStringBuffer *) NIL_CHK(buf)) appendWithNSString:[NSString stringWithFormat:@"(%@,%@)" , [((ComAdironBusmeIntegrationGeoPoint *) NIL_CHK(p)) getLongitudeE6] * 1E6, [((ComAdironBusmeIntegrationGeoPoint *) NIL_CHK(p)) getLatitudeE6] * 1E6, nil]];
    }
  }
  [((JavaLangStringBuffer *) NIL_CHK(buf)) appendWithNSString:@"]"];
  return [((JavaLangStringBuffer *) NIL_CHK(buf)) description];
}

- (IOSObjectArray *)parsePathWithComAdironBusmeApiAPIBase_Tag:(ComAdironBusmeApiAPIBase_Tag *)jps {
  IOSObjectArray *path = [[[IOSObjectArray alloc] initWithLength:[((id<JavaUtilList>) NIL_CHK(jps.childNodes)) size] type:[IOSClass classWithClass:[ComAdironBusmeIntegrationGeoPoint class]]] autorelease];
  int i = 0;
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(jps.childNodes)) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      ComAdironBusmeApiAPIBase_Tag *jp = ((ComAdironBusmeApiAPIBase_Tag *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      int lat = (int) ([JavaLangDouble parseDoubleWithNSString:((NSString *) [((id<JavaUtilMap>) NIL_CHK(jp.attributes)) getWithId:@"lat"])] * 1E6);
      int lon = (int) ([JavaLangDouble parseDoubleWithNSString:((NSString *) [((id<JavaUtilMap>) NIL_CHK(jp.attributes)) getWithId:@"lon"])] * 1E6);
      ComAdironBusmeIntegrationGeoPoint *gp = [[[ComAdironBusmeIntegrationGeoPoint alloc] initWithInt:lat withInt:lon] autorelease];
      [((IOSObjectArray *) NIL_CHK(path)) replaceObjectAtIndex:i++ withObject:gp];
    }
  }
  return path;
}

- (id)init {
  if ((self = [super init])) {
    distance_ = -1;
  }
  return self;
}

+ (void)initialize {
  if (self == [ComAdironBusmeApiJourneyPattern class]) {
    JreOperatorRetainedAssign(&ComAdironBusmeApiJourneyPattern_LOGTAG_, [[IOSClass classWithClass:[ComAdironBusmeApiJourneyPattern class]] getName]);
  }
}

- (void)dealloc {
  JreOperatorRetainedAssign(&path_, nil);
  JreOperatorRetainedAssign(&id__, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmeApiJourneyPattern *typedCopy = (ComAdironBusmeApiJourneyPattern *) copy;
  typedCopy.id_ = id__;
  typedCopy.path = path_;
  typedCopy.distance = distance_;
}

@end
