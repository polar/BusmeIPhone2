//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/src/main/java/com/adiron/busme/platform/LocationBaseRouteFinder.java
//
//  Created by polar on 5/25/13.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "com/adiron/busme/api/Route.h"
#import "com/adiron/busme/integration/GeoPoint.h"
#import "com/adiron/busme/platform/ActivityAPI.h"
#import "com/adiron/busme/platform/GeoCalc.h"
#import "com/adiron/busme/platform/GeoPathUtils.h"
#import "com/adiron/busme/platform/Location.h"
#import "com/adiron/busme/platform/LocationBaseRouteFinder.h"
#import "com/adiron/busme/platform/Log.h"
#import "java/lang/Math.h"
#import "java/util/ArrayList.h"
#import "java/util/Iterator.h"
#import "java/util/List.h"
#import "org/osmdroid/api/IGeoPoint.h"

@implementation ComAdironBusmePlatformLocationBaseRouteFinder

static NSString * ComAdironBusmePlatformLocationBaseRouteFinder_LOGTAG_;

- (ComAdironBusmePlatformActivityAPI *)activityAPI {
  return activityAPI_;
}
- (void)setActivityAPI:(ComAdironBusmePlatformActivityAPI *)activityAPI {
  JreOperatorRetainedAssign(&activityAPI_, activityAPI);
}
@synthesize activityAPI = activityAPI_;
@synthesize distanceThreshold = distanceThreshold_;
@synthesize speedThreshold = speedThreshold_;
@synthesize ignoreUpdates = ignoreUpdates_;
- (ComAdironBusmeApiRoute *)lastPostingRoute {
  return lastPostingRoute_;
}
- (void)setLastPostingRoute:(ComAdironBusmeApiRoute *)lastPostingRoute {
  JreOperatorRetainedAssign(&lastPostingRoute_, lastPostingRoute);
}
@synthesize lastPostingRoute = lastPostingRoute_;
- (NSString *)lastPostingRole {
  return lastPostingRole_;
}
- (void)setLastPostingRole:(NSString *)lastPostingRole {
  JreOperatorRetainedAssign(&lastPostingRole_, lastPostingRole);
}
@synthesize lastPostingRole = lastPostingRole_;

+ (NSString *)LOGTAG {
  return ComAdironBusmePlatformLocationBaseRouteFinder_LOGTAG_;
}

- (id)initWithComAdironBusmePlatformActivityAPI:(ComAdironBusmePlatformActivityAPI *)api {
  if ((self = [super init])) {
    distanceThreshold_ = 60;
    speedThreshold_ = 10;
    JreOperatorRetainedAssign(&activityAPI_, api);
  }
  return self;
}

- (void)onLocationChangedWithComAdironBusmePlatformLocation:(ComAdironBusmePlatformLocation *)location {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformLocationBaseRouteFinder_LOGTAG_ withNSString:[NSString stringWithFormat:@"onLocationChanged: ignore %@ speed=%@" , ignoreUpdates_, [((ComAdironBusmePlatformLocation *) NIL_CHK(location)) getSpeed], nil]];
  if (ignoreUpdates_) {
    return;
  }
  id<JavaUtilList> routes = [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) getActiveJourneys];
  ComAdironBusmeIntegrationGeoPoint *loc = [ComAdironBusmePlatformGeoCalc toGeoPointWithComAdironBusmePlatformLocation:location];
  if ([((ComAdironBusmePlatformLocation *) NIL_CHK(location)) getSpeed] > speedThreshold_) {
    id<JavaUtilList> closeRoutes = [[[JavaUtilArrayList alloc] init] autorelease];
    {
      id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(routes)) iterator]);
      while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
        ComAdironBusmeApiRoute *route = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
        id<OrgOsmdroidApiIGeoPoint> routeLoc = [((ComAdironBusmeApiRoute *) NIL_CHK(route)) getLastKnownLocation];
        [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformLocationBaseRouteFinder_LOGTAG_ withNSString:[NSString stringWithFormat:@"onLocationChanged: Checking Route %@, distance from %@" , [((ComAdironBusmeApiRoute *) NIL_CHK(route)) getCode], routeLoc, nil]];
        if (routeLoc != nil) {
          double distance = [((ComAdironBusmeIntegrationGeoPoint *) NIL_CHK(loc)) distanceToWithOrgOsmdroidApiIGeoPoint:routeLoc];
          [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformLocationBaseRouteFinder_LOGTAG_ withNSString:[NSString stringWithFormat:@"onLocationChanged: Checking Route %@, distance from %@" , [((ComAdironBusmeApiRoute *) NIL_CHK(route)) getCode], distance, nil]];
          if (distance < distanceThreshold_) {
            [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformLocationBaseRouteFinder_LOGTAG_ withNSString:[NSString stringWithFormat:@"onLocationChanged: Route %@ distanceTo %@ < %@" , [((ComAdironBusmeApiRoute *) NIL_CHK(route)) getCode], distance, distanceThreshold_, nil]];
            id<JavaUtilList> possibles = [((ComAdironBusmeApiRoute *) NIL_CHK(route)) whereOnPathsWithOrgOsmdroidApiIGeoPoint:loc withInt:20];
            {
              id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(possibles)) iterator]);
              while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
                ComAdironBusmePlatformGeoPathUtils_DGeoPoint *p = ((ComAdironBusmePlatformGeoPathUtils_DGeoPoint *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
                double diff = [JavaLangMath absWithDouble:[((ComAdironBusmeApiRoute *) NIL_CHK(route)) getLastKnownDistance] / 3.2808 - ((ComAdironBusmePlatformGeoPathUtils_DGeoPoint *) NIL_CHK(p)).distance];
                [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformLocationBaseRouteFinder_LOGTAG_ withNSString:[NSString stringWithFormat:@"onLocationChanged: Route %@ distance-diff=%@" , [((ComAdironBusmeApiRoute *) NIL_CHK(route)) getCode], diff, nil]];
                if (diff < distanceThreshold_) {
                  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformLocationBaseRouteFinder_LOGTAG_ withNSString:[NSString stringWithFormat:@"onLocationChanged: speed=%@" , [((ComAdironBusmePlatformLocation *) NIL_CHK(location)) getSpeed], nil]];
                  [((id<JavaUtilList>) NIL_CHK(closeRoutes)) addWithId:route];
                }
              }
            }
          }
        }
      }
    }
    if (lastPostingRoute_ != nil) {
      ComAdironBusmeApiRoute *postingRoute = self.lastPostingRoute;
      NSString *postingRole = self.lastPostingRole;
      self.lastPostingRole = nil;
      self.lastPostingRoute = nil;
      id<JavaUtilList> closerRoutes = [[[JavaUtilArrayList alloc] init] autorelease];
      IOSObjectArray *path = [((ComAdironBusmeApiRoute *) NIL_CHK(postingRoute)) getPathWithInt:0];
      id<OrgOsmdroidApiIGeoPoint> endPoint = ((id<OrgOsmdroidApiIGeoPoint>) [((IOSObjectArray *) NIL_CHK(path)) objectAtIndex:(int) [((IOSObjectArray *) NIL_CHK(path)) count] - 1]);
      if ([((ComAdironBusmeIntegrationGeoPoint *) NIL_CHK(loc)) distanceToWithOrgOsmdroidApiIGeoPoint:endPoint] < distanceThreshold_) {
        {
          id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(closeRoutes)) iterator]);
          while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
            ComAdironBusmeApiRoute *r = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
            id<OrgOsmdroidApiIGeoPoint> startPoint = ((id<OrgOsmdroidApiIGeoPoint>) [[((ComAdironBusmeApiRoute *) NIL_CHK(r)) getPathWithInt:0] objectAtIndex:0]);
            if ([((ComAdironBusmeIntegrationGeoPoint *) NIL_CHK(loc)) distanceToWithOrgOsmdroidApiIGeoPoint:startPoint] < distanceThreshold_) {
              [((id<JavaUtilList>) NIL_CHK(closerRoutes)) addWithId:r];
            }
          }
        }
      }
      else {
        id<JavaUtilList> possibles = [((ComAdironBusmeApiRoute *) NIL_CHK(postingRoute)) whereOnPathsWithOrgOsmdroidApiIGeoPoint:loc withInt:20];
        {
          id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(possibles)) iterator]);
          while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
            ComAdironBusmePlatformGeoPathUtils_DGeoPoint *p = ((ComAdironBusmePlatformGeoPathUtils_DGeoPoint *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
            double diff = [JavaLangMath absWithDouble:[((ComAdironBusmeApiRoute *) NIL_CHK(postingRoute)) getLastKnownDistance] / 3.2808 - ((ComAdironBusmePlatformGeoPathUtils_DGeoPoint *) NIL_CHK(p)).distance];
            if (diff < distanceThreshold_) {
              {
                id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(closeRoutes)) iterator]);
                while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
                  ComAdironBusmeApiRoute *r = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
                  id<JavaUtilList> rps = [((ComAdironBusmeApiRoute *) NIL_CHK(r)) whereOnPathsWithOrgOsmdroidApiIGeoPoint:((ComAdironBusmePlatformGeoPathUtils_DGeoPoint *) NIL_CHK(p)).point withInt:20];
                  {
                    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(rps)) iterator]);
                    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
                      ComAdironBusmePlatformGeoPathUtils_DGeoPoint *rp = ((ComAdironBusmePlatformGeoPathUtils_DGeoPoint *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
                      if ([((ComAdironBusmeIntegrationGeoPoint *) NIL_CHK(p.point)) distanceToWithOrgOsmdroidApiIGeoPoint:((ComAdironBusmePlatformGeoPathUtils_DGeoPoint *) NIL_CHK(rp)).point] < distanceThreshold_) {
                        [((id<JavaUtilList>) NIL_CHK(closerRoutes)) addWithId:r];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if ([((id<JavaUtilList>) NIL_CHK(closerRoutes)) size] > 0) {
        if ([((id<JavaUtilList>) NIL_CHK(closerRoutes)) size] == 1) {
          ComAdironBusmeApiRoute *route = ((ComAdironBusmeApiRoute *) [((id<JavaUtilList>) NIL_CHK(closerRoutes)) getWithInt:0]);
          if ([@"driver" isEqual:postingRole]) {
            [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) onSelectJourneyForPostingWithComAdironBusmeApiRoute:route withNSString:@"driver"];
            return;
          }
          else {
            [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) onSelectJourneyForPostingWithComAdironBusmeApiRoute:route withNSString:@"passenger"];
            return;
          }
        }
        else {
          closeRoutes = closerRoutes;
        }
      }
    }
    if ([((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) isLoggedIn] && [((id<JavaUtilList>) NIL_CHK(closeRoutes)) size] > 0) {
      [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) UIShowWhichBusDialogWithNSString:@"passenger" withJavaUtilList:closeRoutes];
    }
  }
}

- (BOOL)isIgnoreUpdates {
  return ignoreUpdates_;
}

- (void)setLastPostingRouteWithComAdironBusmeApiRoute:(ComAdironBusmeApiRoute *)route
                                         withNSString:(NSString *)lastPostingRole2 {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformLocationBaseRouteFinder_LOGTAG_ withNSString:[NSString stringWithFormat:@"setLastPostingRoute: ignore=%@" , ignoreUpdates_, nil]];
  self.lastPostingRoute = route;
  self.lastPostingRole = lastPostingRole2;
}

- (void)setIgnoreUpdatesWithBOOL:(BOOL)ignoreUpdates {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformLocationBaseRouteFinder_LOGTAG_ withNSString:[NSString stringWithFormat:@"setIgnoreUpdates: ignore=%@" , ignoreUpdates, nil]];
  self.ignoreUpdates = ignoreUpdates;
}

- (void)onResume {
  [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) requestLocationUpdatesWithInt:[((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) getPostlocTimeRate] withInt:[((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) getPostlocDistRate] withComAdironBusmePlatformLocationListener:self];
}

- (void)onPause {
  [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) removeUpdatesWithComAdironBusmePlatformLocationListener:self];
}

- (void)onProviderDisabledWithNSString:(NSString *)arg0 {
}

- (void)onProviderEnabledWithNSString:(NSString *)arg0 {
}

- (void)onStatusChangedWithNSString:(NSString *)arg0
                            withInt:(int)arg1 {
}

+ (void)initialize {
  if (self == [ComAdironBusmePlatformLocationBaseRouteFinder class]) {
    JreOperatorRetainedAssign(&ComAdironBusmePlatformLocationBaseRouteFinder_LOGTAG_, [[IOSClass classWithClass:[ComAdironBusmePlatformLocationBaseRouteFinder class]] getName]);
  }
}

- (void)dealloc {
  JreOperatorRetainedAssign(&lastPostingRole_, nil);
  JreOperatorRetainedAssign(&lastPostingRoute_, nil);
  JreOperatorRetainedAssign(&activityAPI_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmePlatformLocationBaseRouteFinder *typedCopy = (ComAdironBusmePlatformLocationBaseRouteFinder *) copy;
  typedCopy.activityAPI = activityAPI_;
  typedCopy.distanceThreshold = distanceThreshold_;
  typedCopy.speedThreshold = speedThreshold_;
  typedCopy.ignoreUpdates = ignoreUpdates_;
  typedCopy.lastPostingRoute = lastPostingRoute_;
  typedCopy.lastPostingRole = lastPostingRole_;
}

@end
