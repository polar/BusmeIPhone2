//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/src/main/java/com/adiron/busme/platform/BannersRequestProcessor.java
//
//  Created by polar on 5/25/13.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "com/adiron/busme/api/APIBase.h"
#import "com/adiron/busme/api/BannerInfo.h"
#import "com/adiron/busme/integration/GeoPoint.h"
#import "com/adiron/busme/integration/http/NameValuePair.h"
#import "com/adiron/busme/integration/http/message/BasicNameValuePair.h"
#import "com/adiron/busme/platform/BannerBasket.h"
#import "com/adiron/busme/platform/BannersRequestProcessor.h"
#import "com/adiron/busme/platform/Log.h"
#import "java/lang/Double.h"
#import "java/lang/Exception.h"
#import "java/lang/Integer.h"
#import "java/lang/Long.h"
#import "java/util/ArrayList.h"
#import "java/util/Collection.h"
#import "java/util/HashMap.h"
#import "java/util/Iterator.h"
#import "java/util/List.h"
#import "java/util/Map.h"

@implementation ComAdironBusmePlatformBannersRequestProcessor

static NSString * ComAdironBusmePlatformBannersRequestProcessor_LOGTAG_;

- (ComAdironBusmePlatformBannerBasket *)bannerBasket {
  return bannerBasket_;
}
- (void)setBannerBasket:(ComAdironBusmePlatformBannerBasket *)bannerBasket {
  JreOperatorRetainedAssign(&bannerBasket_, bannerBasket);
}
@synthesize bannerBasket = bannerBasket_;
- (id<ComAdironBusmePlatformBannersRequestProcessor_OnBannersResponseListener>)responseListener {
  return responseListener_;
}
- (void)setResponseListener:(id<ComAdironBusmePlatformBannersRequestProcessor_OnBannersResponseListener>)responseListener {
  JreOperatorRetainedAssign(&responseListener_, responseListener);
}
@synthesize responseListener = responseListener_;

+ (NSString *)LOGTAG {
  return ComAdironBusmePlatformBannersRequestProcessor_LOGTAG_;
}

- (id)init {
  return [super init];
}

- (id)initWithComAdironBusmePlatformBannerBasket:(ComAdironBusmePlatformBannerBasket *)bannerBasket
withComAdironBusmePlatformBannersRequestProcessor_OnBannersResponseListener:(id<ComAdironBusmePlatformBannersRequestProcessor_OnBannersResponseListener>)responseListener {
  if ((self = [super init])) {
    [self setBannerBasketWithComAdironBusmePlatformBannerBasket:bannerBasket];
    [self setResponseListenerWithComAdironBusmePlatformBannersRequestProcessor_OnBannersResponseListener:responseListener];
  }
  return self;
}

- (ComAdironBusmePlatformBannerBasket *)getBannerBasket {
  return bannerBasket_;
}

- (void)setBannerBasketWithComAdironBusmePlatformBannerBasket:(ComAdironBusmePlatformBannerBasket *)bannerBasket {
  self.bannerBasket = bannerBasket;
}

- (id<ComAdironBusmePlatformBannersRequestProcessor_OnBannersResponseListener>)getResponseListener {
  return responseListener_;
}

- (void)setResponseListenerWithComAdironBusmePlatformBannersRequestProcessor_OnBannersResponseListener:(id<ComAdironBusmePlatformBannersRequestProcessor_OnBannersResponseListener>)responseListener {
  self.responseListener = responseListener;
}

- (void)processResponseWithComAdironBusmeApiAPIBase_Tag:(ComAdironBusmeApiAPIBase_Tag *)response {
  id<JavaUtilMap> banners = nil;
  if (response != nil && ((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(response)).childNodes != nil) {
    {
      id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(response.childNodes)) iterator]);
      while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
        ComAdironBusmeApiAPIBase_Tag *tag = ((ComAdironBusmeApiAPIBase_Tag *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
        if ([@"Banners" isEqual:((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(tag)).name]) {
          [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannersRequestProcessor_LOGTAG_ withNSString:[NSString stringWithFormat:@"getBannerXML: GOT %d Elements", [((id<JavaUtilList>) NIL_CHK(tag.childNodes)) size]]];
          banners = [[[JavaUtilHashMap alloc] initWithInt:[((id<JavaUtilList>) NIL_CHK(tag.childNodes)) size]] autorelease];
          if ([((id<JavaUtilList>) NIL_CHK(tag.childNodes)) size] > 0) {
            [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannersRequestProcessor_LOGTAG_ withNSString:[NSString stringWithFormat:@"getBannersXML: GOT banners %@", tag]];
            [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannersRequestProcessor_LOGTAG_ withNSString:[NSString stringWithFormat:@"getBannersXML: GOT %d Banners", [((id<JavaUtilList>) NIL_CHK(tag.childNodes)) size]]];
            {
              id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(tag.childNodes)) iterator]);
              while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
                ComAdironBusmeApiAPIBase_Tag *n = ((ComAdironBusmeApiAPIBase_Tag *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
                if ([@"Banner" isEqual:((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(n)).name]) {
                  NSString *id_ = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"id"]);
                  if (((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"destroy"]) != nil) {
                    [((id<JavaUtilMap>) NIL_CHK(banners)) putWithId:id_ withId:nil];
                  }
                  else {
                    @try {
                      ComAdironBusmeApiBannerInfo *banner = [[[ComAdironBusmeApiBannerInfo alloc] init] autorelease];
                      ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).id_ = id_;
                      int lat = (int) ([JavaLangDouble parseDoubleWithNSString:((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"lat"])] * 1E6);
                      int lon = (int) ([JavaLangDouble parseDoubleWithNSString:((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"lon"])] * 1E6);
                      ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).length = [JavaLangInteger parseIntWithNSString:((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"length"])];
                      ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).frequency = [JavaLangInteger parseIntWithNSString:((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"frequency"])];
                      ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).priority = [JavaLangInteger parseIntWithNSString:((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"priority"])];
                      ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).expiryTime = [JavaLangLong parseLongWithNSString:((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"expiryTime"])];
                      ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).radius = [JavaLangLong parseLongWithNSString:((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"radius"])];
                      ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).goUrl = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"goUrl"]);
                      ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).iconUrl = ((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"iconUrl"]);
                      ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).version_ = [JavaLangInteger parseIntWithNSString:((NSString *) [((id<JavaUtilMap>) NIL_CHK(n.attributes)) getWithId:@"version"])];
                      ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).point = [[[ComAdironBusmeIntegrationGeoPoint alloc] initWithInt:lat withInt:lon] autorelease];
                      {
                        id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(n.childNodes)) iterator]);
                        while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
                          ComAdironBusmeApiAPIBase_Tag *m = ((ComAdironBusmeApiAPIBase_Tag *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
                          if ([@"Title" isEqual:((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(m)).name]) {
                            ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).title = ((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(m)).text;
                          }
                          else if ([@"Description" isEqual:((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(m)).name]) {
                            ((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).description_ = ((ComAdironBusmeApiAPIBase_Tag *) NIL_CHK(m)).text;
                          }
                        }
                      }
                      [((id<JavaUtilMap>) NIL_CHK(banners)) putWithId:((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)).id_ withId:banner];
                    }
                    @catch (JavaLangException *e) {
                    }
                  }
                }
              }
            }
          }
          [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannersRequestProcessor_LOGTAG_ withNSString:[NSString stringWithFormat:@"parsed %@ banners" , [((id<JavaUtilMap>) NIL_CHK(banners)) size], nil]];
        }
      }
    }
  }
  if (banners != nil && [self getResponseListener] != nil) {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannersRequestProcessor_LOGTAG_ withNSString:[NSString stringWithFormat:@"hiting ResponseListner with %@ banners" , [((id<JavaUtilMap>) NIL_CHK(banners)) size], nil]];
    [((id<ComAdironBusmePlatformBannersRequestProcessor_OnBannersResponseListener>) [self getResponseListener]) onResponseWithJavaUtilMap:banners];
  }
}

- (id<JavaUtilList>)getArguments {
  ComAdironBusmePlatformBannerBasket *basket = [self getBannerBasket];
  if (basket != nil) {
    id<JavaUtilCollection> collection = [basket getBanners];
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannersRequestProcessor_LOGTAG_ withNSString:[NSString stringWithFormat:@"getArguments() %@ banners" , [((id<JavaUtilCollection>) NIL_CHK(collection)) size], nil]];
    id<JavaUtilList> params = [[[JavaUtilArrayList alloc] initWithInt:[((id<JavaUtilCollection>) NIL_CHK(collection)) size]] autorelease];
    {
      id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilCollection>) NIL_CHK(collection)) iterator]);
      while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
        ComAdironBusmeApiBannerInfo *j = ((ComAdironBusmeApiBannerInfo *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
        [((id<JavaUtilList>) NIL_CHK(params)) addWithId:[[[ComAdironBusmeIntegrationHttpMessageBasicNameValuePair alloc] initWithNSString:@"banner_ids[]" withNSString:((ComAdironBusmeApiBannerInfo *) NIL_CHK(j)).id_] autorelease]];
        [((id<JavaUtilList>) NIL_CHK(params)) addWithId:[[[ComAdironBusmeIntegrationHttpMessageBasicNameValuePair alloc] initWithNSString:@"banner_versions[]" withNSString:[NSString stringWithFormat:@"%d", ((ComAdironBusmeApiBannerInfo *) NIL_CHK(j)).version_]] autorelease]];
      }
    }
    return params;
  }
  else {
    return nil;
  }
}

+ (void)initialize {
  if (self == [ComAdironBusmePlatformBannersRequestProcessor class]) {
    JreOperatorRetainedAssign(&ComAdironBusmePlatformBannersRequestProcessor_LOGTAG_, [[IOSClass classWithClass:[ComAdironBusmePlatformBannersRequestProcessor class]] getName]);
  }
}

- (void)dealloc {
  JreOperatorRetainedAssign(&responseListener_, nil);
  JreOperatorRetainedAssign(&bannerBasket_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmePlatformBannersRequestProcessor *typedCopy = (ComAdironBusmePlatformBannersRequestProcessor *) copy;
  typedCopy.bannerBasket = bannerBasket_;
  typedCopy.responseListener = responseListener_;
}

@end
