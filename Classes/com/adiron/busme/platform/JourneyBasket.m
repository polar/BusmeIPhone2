//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/src/main/java/com/adiron/busme/platform/JourneyBasket.java
//
//  Created by polar on 5/25/13.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "com/adiron/busme/api/JourneyPattern.h"
#import "com/adiron/busme/api/NameId.h"
#import "com/adiron/busme/api/Route.h"
#import "com/adiron/busme/platform/ActivityAPI.h"
#import "com/adiron/busme/platform/JourneyBasket.h"
#import "com/adiron/busme/platform/JourneyStore.h"
#import "com/adiron/busme/platform/Log.h"
#import "java/io/IOException.h"
#import "java/util/ArrayList.h"
#import "java/util/Date.h"
#import "java/util/HashMap.h"
#import "java/util/Iterator.h"
#import "java/util/List.h"
#import "java/util/Map.h"

@implementation ComAdironBusmePlatformJourneyBasket

static NSString * ComAdironBusmePlatformJourneyBasket_LOGTAG_;

- (ComAdironBusmePlatformActivityAPI *)activityAPI {
  return activityAPI_;
}
- (void)setActivityAPI:(ComAdironBusmePlatformActivityAPI *)activityAPI {
  JreOperatorRetainedAssign(&activityAPI_, activityAPI);
}
@synthesize activityAPI = activityAPI_;
- (id<JavaUtilList>)journeys {
  return journeys_;
}
- (void)setJourneys:(id<JavaUtilList>)journeys {
  JreOperatorRetainedAssign(&journeys_, journeys);
}
@synthesize journeys = journeys_;
- (ComAdironBusmePlatformJourneyStore *)journeyStore {
  return journeyStore_;
}
- (void)setJourneyStore:(ComAdironBusmePlatformJourneyStore *)journeyStore {
  JreOperatorRetainedAssign(&journeyStore_, journeyStore);
}
@synthesize journeyStore = journeyStore_;
- (id<JavaUtilMap>)journeyMap {
  return journeyMap_;
}
- (void)setJourneyMap:(id<JavaUtilMap>)journeyMap {
  JreOperatorRetainedAssign(&journeyMap_, journeyMap);
}
@synthesize journeyMap = journeyMap_;
- (id<ComAdironBusmePlatformJourneyBasket_OnJourneyAddedListener>)onJourneyAddedListener {
  return onJourneyAddedListener_;
}
- (void)setOnJourneyAddedListener:(id<ComAdironBusmePlatformJourneyBasket_OnJourneyAddedListener>)onJourneyAddedListener {
  JreOperatorRetainedAssign(&onJourneyAddedListener_, onJourneyAddedListener);
}
@synthesize onJourneyAddedListener = onJourneyAddedListener_;
- (id<ComAdironBusmePlatformJourneyBasket_OnJourneyRemovedListener>)onJourneyRemovedListener {
  return onJourneyRemovedListener_;
}
- (void)setOnJourneyRemovedListener:(id<ComAdironBusmePlatformJourneyBasket_OnJourneyRemovedListener>)onJourneyRemovedListener {
  JreOperatorRetainedAssign(&onJourneyRemovedListener_, onJourneyRemovedListener);
}
@synthesize onJourneyRemovedListener = onJourneyRemovedListener_;
- (id<ComAdironBusmePlatformJourneyBasket_OnBasketUpdateListener>)onBasketUpdateListener {
  return onBasketUpdateListener_;
}
- (void)setOnBasketUpdateListener:(id<ComAdironBusmePlatformJourneyBasket_OnBasketUpdateListener>)onBasketUpdateListener {
  JreOperatorRetainedAssign(&onBasketUpdateListener_, onBasketUpdateListener);
}
@synthesize onBasketUpdateListener = onBasketUpdateListener_;

+ (NSString *)LOGTAG {
  return ComAdironBusmePlatformJourneyBasket_LOGTAG_;
}

- (id)initWithComAdironBusmePlatformActivityAPI:(ComAdironBusmePlatformActivityAPI *)api
         withComAdironBusmePlatformJourneyStore:(ComAdironBusmePlatformJourneyStore *)journeyStore {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&journeys_, [[[JavaUtilArrayList alloc] init] autorelease]);
    JreOperatorRetainedAssign(&journeyMap_, [[[JavaUtilHashMap alloc] init] autorelease]);
    JreOperatorRetainedAssign(&onJourneyAddedListener_, nil);
    JreOperatorRetainedAssign(&onJourneyRemovedListener_, nil);
    JreOperatorRetainedAssign(&onBasketUpdateListener_, nil);
    self.activityAPI = api;
    self.journeyStore = journeyStore;
  }
  return self;
}

- (ComAdironBusmeApiRoute *)retrieveRouteWithComAdironBusmeApiNameId:(ComAdironBusmeApiNameId *)id_ {
  return [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) getRouteDefinitionWithComAdironBusmeApiNameId:id_];
}

- (ComAdironBusmeApiJourneyPattern *)retrieveJourneyPatternWithNSString:(NSString *)id_ {
  return [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) getJourneyPatternWithNSString:id_];
}

- (ComAdironBusmeApiRoute *)retrieveWithComAdironBusmeApiNameId:(ComAdironBusmeApiNameId *)id_ {
  ComAdironBusmeApiRoute *route = [self retrieveRouteWithComAdironBusmeApiNameId:id_];
  if ([((ComAdironBusmeApiRoute *) NIL_CHK(route)) isJourney] && [((ComAdironBusmeApiRoute *) NIL_CHK(route)) getJourneyPatternWithInt:0] == nil) {
    ComAdironBusmeApiJourneyPattern *pattern = [((ComAdironBusmePlatformJourneyStore *) NIL_CHK(journeyStore_)) getPatternWithNSString:[((ComAdironBusmeApiRoute *) NIL_CHK(route)) getPatternId]];
    if (pattern == nil) {
      pattern = [self retrieveJourneyPatternWithNSString:[((ComAdironBusmeApiRoute *) NIL_CHK(route)) getPatternId]];
    }
    [((ComAdironBusmeApiRoute *) NIL_CHK(route)) setJourneyPatternWithInt:0 withComAdironBusmeApiJourneyPattern:pattern];
  }
  if ([((ComAdironBusmeApiRoute *) NIL_CHK(route)) isRouteDefinition]) {
    id<JavaUtilList> pids = [((ComAdironBusmeApiRoute *) NIL_CHK(route)) getPatternIds];
    for (int i = 0; i < [((id<JavaUtilList>) NIL_CHK(pids)) size]; i++) {
      ComAdironBusmeApiJourneyPattern *pattern = [((ComAdironBusmePlatformJourneyStore *) NIL_CHK(journeyStore_)) getPatternWithNSString:((NSString *) [((id<JavaUtilList>) NIL_CHK(pids)) getWithInt:i])];
      if (pattern == nil) {
        pattern = [self retrieveJourneyPatternWithNSString:((NSString *) [((id<JavaUtilList>) NIL_CHK(pids)) getWithInt:i])];
      }
      [((ComAdironBusmeApiRoute *) NIL_CHK(route)) setJourneyPatternWithInt:i withComAdironBusmeApiJourneyPattern:pattern];
    }
  }
  return route;
}

- (void)syncWithJavaUtilList:(id<JavaUtilList>)journeyids
withComAdironBusmePlatformJourneyBasket_ProgressListener:(id<ComAdironBusmePlatformJourneyBasket_ProgressListener>)progressListener
withComAdironBusmePlatformJourneyBasket_OnIOErrorListener:(id<ComAdironBusmePlatformJourneyBasket_OnIOErrorListener>)onIOErrorListener {
  id<JavaUtilList> copy_journeys = [[[JavaUtilArrayList alloc] initWithJavaUtilCollection:journeys_] autorelease];
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformJourneyBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"Syncing with %d journey ids", [((id<JavaUtilList>) NIL_CHK(journeyids)) size]]];
  id<JavaUtilList> addedJourneys = [[[JavaUtilArrayList alloc] init] autorelease];
  id<JavaUtilList> removedJourneys = [[[JavaUtilArrayList alloc] init] autorelease];
  id<JavaUtilList> keepJourneys = [[[JavaUtilArrayList alloc] init] autorelease];
  id<JavaUtilList> newJourneys = [[[JavaUtilArrayList alloc] init] autorelease];
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(journeyids)) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      ComAdironBusmeApiNameId *journeyid = ((ComAdironBusmeApiNameId *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      if (progressListener != nil) {
        [progressListener onRouteStartWithInt:[((id<JavaUtilList>) NIL_CHK(journeyids)) indexOfWithId:journeyid]];
      }
      if (journeyid != nil) {
        BOOL addJourney = YES;
        {
          id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(copy_journeys)) iterator]);
          while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
            ComAdironBusmeApiRoute *r = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
            if ([[((ComAdironBusmeApiRoute *) NIL_CHK(r)) getId] isEqual:journeyid.id_]) {
              [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformJourneyBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"sync: Route %@ - %@ : verisons %@ ?=? %@" , [((ComAdironBusmeApiRoute *) NIL_CHK(r)) getId], [((ComAdironBusmeApiRoute *) NIL_CHK(r)) getName], [((ComAdironBusmeApiRoute *) NIL_CHK(r)) getVersion], journeyid.version_, nil]];
              if ([((ComAdironBusmeApiRoute *) NIL_CHK(r)) getVersion] < journeyid.version_) {
                [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformJourneyBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"Replacing Route %@:%@ version: %qi --> %qi", journeyid.name, journeyid.id_, [((ComAdironBusmeApiRoute *) NIL_CHK(r)) getVersion], journeyid.version_]];
                addJourney = YES;
                [((ComAdironBusmePlatformJourneyStore *) NIL_CHK(journeyStore_)) removeJourneyWithComAdironBusmeApiRoute:r];
              }
              else {
                addJourney = NO;
              }
              break;
            }
          }
        }
        if (addJourney) {
          ComAdironBusmeApiRoute *route = [((ComAdironBusmePlatformJourneyStore *) NIL_CHK(journeyStore_)) getJourneyWithNSString:journeyid.id_];
          if (route == nil) {
            @try {
              route = [self retrieveWithComAdironBusmeApiNameId:journeyid];
            }
            @catch (JavaIoIOException *e) {
              route = nil;
              [((JavaIoIOException *) NIL_CHK(e)) printStackTrace];
            }
            if (route != nil) {
              [((ComAdironBusmePlatformJourneyStore *) NIL_CHK(journeyStore_)) storeJourneyWithComAdironBusmeApiRoute:route];
            }
          }
          [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformJourneyBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"Adding Route %@:%@ %qi = %@", journeyid.name, journeyid.id_, journeyid.version_, route]];
          if (route != nil) {
            if ([route isJourney]) {
              double measure = [route getStartingMeasure];
              [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformJourneyBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"sync: Adding Journey %@ - %@ - start %@ measure %@" , [route getCode], [route getName], [[[JavaUtilDate alloc] initWithLongInt:[route getStartTime]] autorelease], measure, nil]];
            }
            else {
              [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformJourneyBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"sync: Adding Route %@ - %@" , [route getCode], [route getName], [[[JavaUtilDate alloc] initWithLongInt:[route getStartTime]] autorelease], nil]];
            }
            [((id<JavaUtilList>) NIL_CHK(addedJourneys)) addWithId:route];
          }
        }
      }
      if (progressListener != nil) {
        [progressListener onRouteEndWithInt:[((id<JavaUtilList>) NIL_CHK(journeyids)) indexOfWithId:journeyid]];
      }
    }
  }
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(copy_journeys)) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      ComAdironBusmeApiRoute *r = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      BOOL removeJourney = YES;
      {
        id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(journeyids)) iterator]);
        while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
          ComAdironBusmeApiNameId *journeyid = ((ComAdironBusmeApiNameId *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
          if ([[((ComAdironBusmeApiRoute *) NIL_CHK(r)) getId] isEqual:((ComAdironBusmeApiNameId *) NIL_CHK(journeyid)).id_]) {
            if ([((ComAdironBusmeApiRoute *) NIL_CHK(r)) getVersion] < ((ComAdironBusmeApiNameId *) NIL_CHK(journeyid)).version_) {
              [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformJourneyBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"Removing Old Route %@:%@ version: %qi --> %qi", ((ComAdironBusmeApiNameId *) NIL_CHK(journeyid)).name, ((ComAdironBusmeApiNameId *) NIL_CHK(journeyid)).id_, [((ComAdironBusmeApiRoute *) NIL_CHK(r)) getVersion], ((ComAdironBusmeApiNameId *) NIL_CHK(journeyid)).version_]];
              removeJourney = YES;
            }
            else {
              removeJourney = NO;
            }
            break;
          }
        }
      }
      if (removeJourney) {
        [((id<JavaUtilList>) NIL_CHK(removedJourneys)) addWithId:r];
      }
      else {
        if (r != nil) {
          if ([r isJourney]) {
            double measure = [r getStartingMeasure];
            [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformJourneyBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"sync: Keeping Journey %@ - %@ - start %@ measure %@" , [r getCode], [r getName], [[[JavaUtilDate alloc] initWithLongInt:[r getStartTime]] autorelease], measure, nil]];
          }
          else {
            [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformJourneyBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"sync: Keeping Route %@ - %@" , [r getCode], [r getName], [[[JavaUtilDate alloc] initWithLongInt:[r getStartTime]] autorelease], nil]];
          }
        }
        [((id<JavaUtilList>) NIL_CHK(keepJourneys)) addWithId:r];
      }
    }
  }
  [((id<JavaUtilList>) NIL_CHK(newJourneys)) addAllWithJavaUtilCollection:keepJourneys];
  [((id<JavaUtilList>) NIL_CHK(newJourneys)) addAllWithJavaUtilCollection:addedJourneys];
  [self setJourneysWithJavaUtilList:newJourneys];
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(removedJourneys)) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      ComAdironBusmeApiRoute *r = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      [self notifyJourneyRemovedListenerWithComAdironBusmeApiRoute:r];
    }
  }
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(addedJourneys)) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      ComAdironBusmeApiRoute *r = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      [self notifyJourneyAddedListenerWithComAdironBusmeApiRoute:r];
    }
  }
  [self notifyBasketUpdateListener];
}

- (void)setJourneysWithJavaUtilList:(id<JavaUtilList>)journeys {
  @synchronized(self) {
    {
      self.journeys = journeys;
      [self updateJourneyMap];
    }
  }
}

- (void)updateJourneyMap {
  JreOperatorRetainedAssign(&journeyMap_, [[[JavaUtilHashMap alloc] initWithInt:[((id<JavaUtilList>) NIL_CHK(journeys_)) size]] autorelease]);
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(journeys_)) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      ComAdironBusmeApiRoute *r = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      [((id<JavaUtilMap>) NIL_CHK(journeyMap_)) putWithId:[((ComAdironBusmeApiRoute *) NIL_CHK(r)) getId] withId:r];
    }
  }
}

- (ComAdironBusmeApiRoute *)getRouteWithNSString:(NSString *)id_ {
  @synchronized(self) {
    {
      return ((ComAdironBusmeApiRoute *) [((id<JavaUtilMap>) NIL_CHK(journeyMap_)) getWithId:id_]);
    }
  }
}

- (id<JavaUtilList>)getAllRoutes {
  return [[[JavaUtilArrayList alloc] initWithJavaUtilCollection:journeys_] autorelease];
}

- (id<JavaUtilList>)getAllJourneys {
  JavaUtilArrayList *js = [[[JavaUtilArrayList alloc] init] autorelease];
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(journeys_)) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      ComAdironBusmeApiRoute *r = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      if ([((ComAdironBusmeApiRoute *) NIL_CHK(r)) isJourney]) {
        [((JavaUtilArrayList *) NIL_CHK(js)) addWithId:r];
      }
    }
  }
  return js;
}

- (id<JavaUtilList>)getAllActiveJourneys {
  JavaUtilArrayList *js = [[[JavaUtilArrayList alloc] init] autorelease];
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(journeys_)) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      ComAdironBusmeApiRoute *r = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      if ([((ComAdironBusmeApiRoute *) NIL_CHK(r)) isActiveJourney]) {
        [((JavaUtilArrayList *) NIL_CHK(js)) addWithId:r];
      }
    }
  }
  return js;
}

- (void)empty {
  id<JavaUtilList> copy_journeys = [[[JavaUtilArrayList alloc] initWithJavaUtilCollection:journeys_] autorelease];
  [self setJourneysWithJavaUtilList:[[[JavaUtilArrayList alloc] init] autorelease]];
  id<JavaUtilIterator> js = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(copy_journeys)) iterator]);
  while ([((id<JavaUtilIterator>) NIL_CHK(js)) hasNext]) {
    ComAdironBusmeApiRoute *j = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(js)) next]);
    [((id<JavaUtilIterator>) NIL_CHK(js)) remove];
    [self notifyJourneyRemovedListenerWithComAdironBusmeApiRoute:j];
  }
  [self notifyBasketUpdateListener];
}

- (void)removeAllJourneys {
  id<JavaUtilList> copy_journeys = [[[JavaUtilArrayList alloc] initWithJavaUtilCollection:journeys_] autorelease];
  id<JavaUtilIterator> js = ((id<JavaUtilIterator>) [((id<JavaUtilList>) NIL_CHK(copy_journeys)) iterator]);
  while ([((id<JavaUtilIterator>) NIL_CHK(js)) hasNext]) {
    ComAdironBusmeApiRoute *j = ((ComAdironBusmeApiRoute *) [((id<JavaUtilIterator>) NIL_CHK(js)) next]);
    if ([((ComAdironBusmeApiRoute *) NIL_CHK(j)) isJourney]) {
      [((id<JavaUtilIterator>) NIL_CHK(js)) remove];
      [self notifyJourneyRemovedListenerWithComAdironBusmeApiRoute:j];
    }
  }
  [self setJourneysWithJavaUtilList:copy_journeys];
  [self notifyBasketUpdateListener];
}

- (id<ComAdironBusmePlatformJourneyBasket_OnJourneyAddedListener>)getOnJourneyAddedListener {
  return onJourneyAddedListener_;
}

- (void)setOnJourneyAddedListenerWithComAdironBusmePlatformJourneyBasket_OnJourneyAddedListener:(id<ComAdironBusmePlatformJourneyBasket_OnJourneyAddedListener>)onJourneyAddedListener {
  self.onJourneyAddedListener = onJourneyAddedListener;
}

- (id<ComAdironBusmePlatformJourneyBasket_OnJourneyRemovedListener>)getOnJourneyRemovedListener {
  return onJourneyRemovedListener_;
}

- (void)setOnJourneyRemovedListenerWithComAdironBusmePlatformJourneyBasket_OnJourneyRemovedListener:(id<ComAdironBusmePlatformJourneyBasket_OnJourneyRemovedListener>)onJourneyRemovedListener {
  self.onJourneyRemovedListener = onJourneyRemovedListener;
}

- (id<ComAdironBusmePlatformJourneyBasket_OnBasketUpdateListener>)getOnBasketUpdateListener {
  return onBasketUpdateListener_;
}

- (void)setOnBasketUpdateListenerWithComAdironBusmePlatformJourneyBasket_OnBasketUpdateListener:(id<ComAdironBusmePlatformJourneyBasket_OnBasketUpdateListener>)onBasketUpdateListener {
  self.onBasketUpdateListener = onBasketUpdateListener;
}

- (void)notifyBasketUpdateListener {
  if (onBasketUpdateListener_ != nil) {
    [onBasketUpdateListener_ onUpdateBasketWithComAdironBusmePlatformJourneyBasket:self];
  }
}

- (void)notifyJourneyAddedListenerWithComAdironBusmeApiRoute:(ComAdironBusmeApiRoute *)added {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformJourneyBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"Notifying listener %@  route %@", onJourneyAddedListener_, [((ComAdironBusmeApiRoute *) NIL_CHK(added)) getName]]];
  if (onJourneyAddedListener_ != nil) {
    [onJourneyAddedListener_ onJourneyAddedWithComAdironBusmePlatformJourneyBasket:self withComAdironBusmeApiRoute:added];
  }
}

- (void)notifyJourneyRemovedListenerWithComAdironBusmeApiRoute:(ComAdironBusmeApiRoute *)removed {
  if (onJourneyRemovedListener_ != nil) {
    [onJourneyRemovedListener_ onJourneyRemovedWithComAdironBusmePlatformJourneyBasket:self withComAdironBusmeApiRoute:removed];
  }
}

- (void)dealloc {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformJourneyBasket_LOGTAG_ withNSString:@"finalize"];
  JreOperatorRetainedAssign(&onBasketUpdateListener_, nil);
  JreOperatorRetainedAssign(&onJourneyRemovedListener_, nil);
  JreOperatorRetainedAssign(&onJourneyAddedListener_, nil);
  JreOperatorRetainedAssign(&journeyMap_, nil);
  JreOperatorRetainedAssign(&journeyStore_, nil);
  JreOperatorRetainedAssign(&journeys_, nil);
  JreOperatorRetainedAssign(&activityAPI_, nil);
  [super dealloc];
}

+ (void)initialize {
  if (self == [ComAdironBusmePlatformJourneyBasket class]) {
    JreOperatorRetainedAssign(&ComAdironBusmePlatformJourneyBasket_LOGTAG_, [[IOSClass classWithClass:[ComAdironBusmePlatformJourneyBasket class]] getName]);
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmePlatformJourneyBasket *typedCopy = (ComAdironBusmePlatformJourneyBasket *) copy;
  typedCopy.activityAPI = activityAPI_;
  typedCopy.journeys = journeys_;
  typedCopy.journeyStore = journeyStore_;
  typedCopy.journeyMap = journeyMap_;
  typedCopy.onJourneyAddedListener = onJourneyAddedListener_;
  typedCopy.onJourneyRemovedListener = onJourneyRemovedListener_;
  typedCopy.onBasketUpdateListener = onBasketUpdateListener_;
}

@end
