//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/src/main/java/com/adiron/busme/platform/GeoPathUtils.java
//
//  Created by polar on 5/25/13.
//

#import "IOSObjectArray.h"
#import "com/adiron/busme/integration/GeoPoint.h"
#import "com/adiron/busme/platform/GeoPathUtils.h"
#import "java/lang/Math.h"
#import "java/util/ArrayList.h"
#import "java/util/List.h"
#import "org/osmdroid/api/IGeoPoint.h"

@implementation ComAdironBusmePlatformGeoPathUtils

+ (double)LAT_PER_FOT {
  return ComAdironBusmePlatformGeoPathUtils_LAT_PER_FOT;
}

+ (double)LON_PER_FOOT {
  return ComAdironBusmePlatformGeoPathUtils_LON_PER_FOOT;
}

+ (double)FEET_PER_KM {
  return ComAdironBusmePlatformGeoPathUtils_FEET_PER_KM;
}

+ (double)EARTH_RADIUS_FEET {
  return ComAdironBusmePlatformGeoPathUtils_EARTH_RADIUS_FEET;
}

+ (double)getCentralAngleWithOrgOsmdroidApiIGeoPoint:(id<OrgOsmdroidApiIGeoPoint>)c1
                         withOrgOsmdroidApiIGeoPoint:(id<OrgOsmdroidApiIGeoPoint>)iGeoPoint {
  double dlon = [JavaLangMath toRadiansWithDouble:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(c1)) getLongitudeE6] / 1E6 - [((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(iGeoPoint)) getLongitudeE6] / 1E6];
  double a = [JavaLangMath cosWithDouble:[JavaLangMath toRadiansWithDouble:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(iGeoPoint)) getLatitudeE6] / 1E6]] * [JavaLangMath sinWithDouble:dlon];
  double b = [JavaLangMath cosWithDouble:[JavaLangMath toRadiansWithDouble:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(c1)) getLatitudeE6] / 1E6]] * [JavaLangMath sinWithDouble:[JavaLangMath toRadiansWithDouble:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(iGeoPoint)) getLatitudeE6] / 1E6]] - [JavaLangMath sinWithDouble:[JavaLangMath toRadiansWithDouble:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(c1)) getLatitudeE6] / 1E6]] * [JavaLangMath cosWithDouble:[JavaLangMath toRadiansWithDouble:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(iGeoPoint)) getLatitudeE6] / 1E6]] * [JavaLangMath cosWithDouble:dlon];
  double c = [JavaLangMath sinWithDouble:[JavaLangMath toRadiansWithDouble:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(c1)) getLatitudeE6] / 1E6]] * [JavaLangMath sinWithDouble:[JavaLangMath toRadiansWithDouble:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(iGeoPoint)) getLatitudeE6] / 1E6]] + [JavaLangMath cosWithDouble:[JavaLangMath toRadiansWithDouble:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(c1)) getLatitudeE6] / 1E6]] * [JavaLangMath cosWithDouble:[JavaLangMath toRadiansWithDouble:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(iGeoPoint)) getLatitudeE6] / 1E6]] * [JavaLangMath cosWithDouble:dlon];
  double angle = [JavaLangMath atan2WithDouble:[JavaLangMath sqrtWithDouble:a * a + b * b] withDouble:c];
  return angle;
}

+ (double)getGeoAngleWithOrgOsmdroidApiIGeoPoint:(id<OrgOsmdroidApiIGeoPoint>)c1
                     withOrgOsmdroidApiIGeoPoint:(id<OrgOsmdroidApiIGeoPoint>)iGeoPoint {
  double x = [((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(iGeoPoint)) getLongitudeE6] / 1E6 - [((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(c1)) getLongitudeE6] / 1E6;
  double y = [((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(iGeoPoint)) getLatitudeE6] / 1E6 - [((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(c1)) getLatitudeE6] / 1E6;
  y = y <= -180 ? y + 360 : y;
  y = y >= 180 ? y - 360 : y;
  double ca = [ComAdironBusmePlatformGeoPathUtils getCentralAngleWithOrgOsmdroidApiIGeoPoint:c1 withOrgOsmdroidApiIGeoPoint:iGeoPoint];
  id<OrgOsmdroidApiIGeoPoint> c3 = [[[ComAdironBusmeIntegrationGeoPoint alloc] initWithInt:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(c1)) getLatitudeE6] withInt:[((id<OrgOsmdroidApiIGeoPoint>) NIL_CHK(iGeoPoint)) getLongitudeE6]] autorelease];
  double ca1 = [ComAdironBusmePlatformGeoPathUtils getCentralAngleWithOrgOsmdroidApiIGeoPoint:c1 withOrgOsmdroidApiIGeoPoint:c3];
  double dist1 = ComAdironBusmePlatformGeoPathUtils_EARTH_RADIUS_FEET * ca1 * [JavaLangMath signumWithDouble:x];
  double ca2 = [ComAdironBusmePlatformGeoPathUtils getCentralAngleWithOrgOsmdroidApiIGeoPoint:iGeoPoint withOrgOsmdroidApiIGeoPoint:c3];
  double dist2 = ComAdironBusmePlatformGeoPathUtils_EARTH_RADIUS_FEET * ca2 * [JavaLangMath signumWithDouble:y];
  double angle = [JavaLangMath atan2WithDouble:dist2 withDouble:dist1];
  return angle;
}

+ (double)getGeoDistanceWithOrgOsmdroidApiIGeoPoint:(id<OrgOsmdroidApiIGeoPoint>)c1
                        withOrgOsmdroidApiIGeoPoint:(id<OrgOsmdroidApiIGeoPoint>)iGeoPoint {
  double ca = [ComAdironBusmePlatformGeoPathUtils getCentralAngleWithOrgOsmdroidApiIGeoPoint:c1 withOrgOsmdroidApiIGeoPoint:iGeoPoint];
  double dist = ComAdironBusmePlatformGeoPathUtils_EARTH_RADIUS_FEET * ca;
  return [JavaLangMath absWithDouble:dist];
}

+ (BOOL)onLineWithOrgOsmdroidApiIGeoPoint:(id<OrgOsmdroidApiIGeoPoint>)c1
              withOrgOsmdroidApiIGeoPoint:(id<OrgOsmdroidApiIGeoPoint>)c2
                               withDouble:(double)buffer
              withOrgOsmdroidApiIGeoPoint:(id<OrgOsmdroidApiIGeoPoint>)iGeoPoint {
  double theta1 = [ComAdironBusmePlatformGeoPathUtils getGeoAngleWithOrgOsmdroidApiIGeoPoint:c1 withOrgOsmdroidApiIGeoPoint:c2];
  double theta2 = [ComAdironBusmePlatformGeoPathUtils getGeoAngleWithOrgOsmdroidApiIGeoPoint:c1 withOrgOsmdroidApiIGeoPoint:iGeoPoint];
  double theta3 = theta2 - theta1;
  double hc1c3 = [ComAdironBusmePlatformGeoPathUtils getGeoDistanceWithOrgOsmdroidApiIGeoPoint:c1 withOrgOsmdroidApiIGeoPoint:iGeoPoint];
  double hc1c2 = [ComAdironBusmePlatformGeoPathUtils getGeoDistanceWithOrgOsmdroidApiIGeoPoint:c1 withOrgOsmdroidApiIGeoPoint:c2];
  BOOL result = hc1c3 < buffer || [JavaLangMath absWithDouble:theta3] < JavaLangMath_PI / 2 && hc1c3 <= hc1c2 + buffer / 2.0 && [JavaLangMath absWithDouble:[JavaLangMath sinWithDouble:theta3] * hc1c3] <= buffer / 2.0;
  return result;
}

+ (BOOL)isOnPathWithOrgOsmdroidApiIGeoPointArray:(IOSObjectArray *)path
                     withOrgOsmdroidApiIGeoPoint:(id<OrgOsmdroidApiIGeoPoint>)iGeoPoint
                                      withDouble:(double)buffer {
  id<OrgOsmdroidApiIGeoPoint> p1 = ((id<OrgOsmdroidApiIGeoPoint>) [((IOSObjectArray *) NIL_CHK(path)) objectAtIndex:0]);
  int i = 0;
  {
    IOSObjectArray *a__ = path;
    int n__ = (int) [((IOSObjectArray *) NIL_CHK(a__)) count];
    for (int i__ = 0; i__ < n__; i__++) {
      id<OrgOsmdroidApiIGeoPoint> p2 = ((id<OrgOsmdroidApiIGeoPoint>) [((IOSObjectArray *) NIL_CHK(a__)) objectAtIndex:i__]);
      if (p1 == p2) {
        continue;
      }
      if ([ComAdironBusmePlatformGeoPathUtils onLineWithOrgOsmdroidApiIGeoPoint:p1 withOrgOsmdroidApiIGeoPoint:p2 withDouble:buffer withOrgOsmdroidApiIGeoPoint:iGeoPoint]) {
        return YES;
      }
      p1 = p2;
      i += 1;
    }
  }
  return NO;
}

+ (id<JavaUtilList>)whereOnPathWithOrgOsmdroidApiIGeoPointArray:(IOSObjectArray *)path
                          withComAdironBusmeIntegrationGeoPoint:(ComAdironBusmeIntegrationGeoPoint *)point
                                                     withDouble:(double)buffer {
  id<JavaUtilList> results = [[[JavaUtilArrayList alloc] init] autorelease];
  double distance = 0.0;
  double bearing = 0.0;
  id<OrgOsmdroidApiIGeoPoint> p1 = ((id<OrgOsmdroidApiIGeoPoint>) [((IOSObjectArray *) NIL_CHK(path)) objectAtIndex:0]);
  int i = 0;
  {
    IOSObjectArray *a__ = path;
    int n__ = (int) [((IOSObjectArray *) NIL_CHK(a__)) count];
    for (int i__ = 0; i__ < n__; i__++) {
      id<OrgOsmdroidApiIGeoPoint> p2 = ((id<OrgOsmdroidApiIGeoPoint>) [((IOSObjectArray *) NIL_CHK(a__)) objectAtIndex:i__]);
      if (p1 == p2) {
        continue;
      }
      if ([ComAdironBusmePlatformGeoPathUtils onLineWithOrgOsmdroidApiIGeoPoint:p1 withOrgOsmdroidApiIGeoPoint:p2 withDouble:buffer withOrgOsmdroidApiIGeoPoint:point]) {
        distance += [((ComAdironBusmeIntegrationGeoPoint *) p1) distanceToWithOrgOsmdroidApiIGeoPoint:point];
        bearing = [((ComAdironBusmeIntegrationGeoPoint *) p2) bearingToWithOrgOsmdroidApiIGeoPoint:p2];
        [((id<JavaUtilList>) NIL_CHK(results)) addWithId:[[[ComAdironBusmePlatformGeoPathUtils_DGeoPoint alloc] initWithComAdironBusmeIntegrationGeoPoint:point withDouble:distance withDouble:bearing] autorelease]];
      }
      else {
        distance += [((ComAdironBusmeIntegrationGeoPoint *) p2) distanceToWithOrgOsmdroidApiIGeoPoint:p2];
      }
      p1 = p2;
      i += 1;
    }
  }
  return results;
}

+ (double)getDistanceWithComAdironBusmeIntegrationGeoPointArray:(IOSObjectArray *)path {
  double dist = 0;
  ComAdironBusmeIntegrationGeoPoint *p1 = ((ComAdironBusmeIntegrationGeoPoint *) [((IOSObjectArray *) NIL_CHK(path)) objectAtIndex:0]);
  int i = 1;
  while (i < (int) [((IOSObjectArray *) NIL_CHK(path)) count]) {
    ComAdironBusmeIntegrationGeoPoint *p2 = ((ComAdironBusmeIntegrationGeoPoint *) [((IOSObjectArray *) NIL_CHK(path)) objectAtIndex:i]);
    dist += [((ComAdironBusmeIntegrationGeoPoint *) NIL_CHK(p1)) distanceToWithOrgOsmdroidApiIGeoPoint:p2];
    p1 = p2;
    i++;
  }
  return dist;
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
@implementation ComAdironBusmePlatformGeoPathUtils_DGeoPoint

- (ComAdironBusmeIntegrationGeoPoint *)point {
  return point_;
}
- (void)setPoint:(ComAdironBusmeIntegrationGeoPoint *)point {
  JreOperatorRetainedAssign(&point_, point);
}
@synthesize point = point_;
@synthesize bearing = bearing_;
@synthesize distance = distance_;

- (id)initWithComAdironBusmeIntegrationGeoPoint:(ComAdironBusmeIntegrationGeoPoint *)point
                                     withDouble:(double)distance
                                     withDouble:(double)bearing {
  if ((self = [super init])) {
    self.point = point;
    self.bearing = bearing;
    self.distance = distance;
  }
  return self;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&point_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmePlatformGeoPathUtils_DGeoPoint *typedCopy = (ComAdironBusmePlatformGeoPathUtils_DGeoPoint *) copy;
  typedCopy.point = point_;
  typedCopy.bearing = bearing_;
  typedCopy.distance = distance_;
}

@end
