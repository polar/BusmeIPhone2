//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/src/main/java/com/adiron/busme/platform/BannersController.java
//
//  Created by polar on 5/25/13.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "com/adiron/busme/api/BannerInfo.h"
#import "com/adiron/busme/platform/ActivityAPI.h"
#import "com/adiron/busme/platform/BannersController.h"
#import "com/adiron/busme/platform/BusmeActivityController.h"
#import "com/adiron/busme/platform/Handler.h"
#import "com/adiron/busme/platform/Log.h"
#import "java/lang/Double.h"
#import "java/lang/Runnable.h"
#import "java/util/Comparator.h"
#import "java/util/Date.h"
#import "java/util/PriorityQueue.h"

@implementation ComAdironBusmePlatformBannersController

static NSString * ComAdironBusmePlatformBannersController_LOGTAG_;

- (id<JavaUtilComparator>)comparator {
  return comparator_;
}
- (void)setComparator:(id<JavaUtilComparator>)comparator {
  JreOperatorRetainedAssign(&comparator_, comparator);
}
@synthesize comparator = comparator_;
- (JavaUtilPriorityQueue *)bannerQ {
  return bannerQ_;
}
- (void)setBannerQ:(JavaUtilPriorityQueue *)bannerQ {
  JreOperatorRetainedAssign(&bannerQ_, bannerQ);
}
@synthesize bannerQ = bannerQ_;
- (ComAdironBusmePlatformActivityAPI *)activityAPI {
  return activityAPI_;
}
- (void)setActivityAPI:(ComAdironBusmePlatformActivityAPI *)activityAPI {
  JreOperatorRetainedAssign(&activityAPI_, activityAPI);
}
@synthesize activityAPI = activityAPI_;
- (ComAdironBusmePlatformBusmeActivityController *)busmeActivityController {
  return busmeActivityController_;
}
- (void)setBusmeActivityController:(ComAdironBusmePlatformBusmeActivityController *)busmeActivityController {
  JreOperatorRetainedAssign(&busmeActivityController_, busmeActivityController);
}
@synthesize busmeActivityController = busmeActivityController_;
- (ComAdironBusmeApiBannerInfo *)currentBanner {
  return currentBanner_;
}
- (void)setCurrentBanner:(ComAdironBusmeApiBannerInfo *)currentBanner {
  JreOperatorRetainedAssign(&currentBanner_, currentBanner);
}
@synthesize currentBanner = currentBanner_;
- (ComAdironBusmePlatformBannersController_Starter *)starter {
  return starter_;
}
- (void)setStarter:(ComAdironBusmePlatformBannersController_Starter *)starter {
  JreOperatorRetainedAssign(&starter_, starter);
}
@synthesize starter = starter_;
@synthesize stopped = stopped_;
- (id<JavaLangRunnable>)updateTask {
  return updateTask_;
}
- (void)setUpdateTask:(id<JavaLangRunnable>)updateTask {
  JreOperatorRetainedAssign(&updateTask_, updateTask);
}
@synthesize updateTask = updateTask_;

+ (NSString *)LOGTAG {
  return ComAdironBusmePlatformBannersController_LOGTAG_;
}

- (id)initWithComAdironBusmePlatformActivityAPI:(ComAdironBusmePlatformActivityAPI *)api
withComAdironBusmePlatformBusmeActivityController:(ComAdironBusmePlatformBusmeActivityController *)controller {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&comparator_, [[[ComAdironBusmePlatformBannersController_$1 alloc] init] autorelease]);
    JreOperatorRetainedAssign(&bannerQ_, [[[JavaUtilPriorityQueue alloc] initWithInt:10 withJavaUtilComparator:comparator_] autorelease]);
    stopped_ = NO;
    JreOperatorRetainedAssign(&updateTask_, [[[ComAdironBusmePlatformBannersController_$2 alloc] initWithComAdironBusmePlatformBannersController:self] autorelease]);
    JreOperatorRetainedAssign(&busmeActivityController_, controller);
    JreOperatorRetainedAssign(&activityAPI_, api);
  }
  return self;
}

- (void)addBannerWithComAdironBusmeApiBannerInfo:(ComAdironBusmeApiBannerInfo *)banner {
  [((JavaUtilPriorityQueue *) NIL_CHK(bannerQ_)) addWithId:banner];
}

- (void)removeBannerWithComAdironBusmeApiBannerInfo:(ComAdironBusmeApiBannerInfo *)banner {
  [((JavaUtilPriorityQueue *) NIL_CHK(bannerQ_)) removeWithId:banner];
}

- (void)start {
  stopped_ = NO;
  if (starter_ == nil) {
    JreOperatorRetainedAssign(&starter_, [[[ComAdironBusmePlatformBannersController_Starter alloc] initWithComAdironBusmePlatformBannersController:self] autorelease]);
    [starter_ run];
  }
}

- (void)stop {
  stopped_ = YES;
}

- (void)onTick {
  [self rollWithBOOL:NO];
}

- (void)rollWithBOOL:(BOOL)removeCurrent {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannersController_LOGTAG_ withNSString:[NSString stringWithFormat:@"onTick" , currentBanner_ != nil ? ((ComAdironBusmeApiBannerInfo *) NIL_CHK(currentBanner_)).title : @"none", nil]];
  long long int now = [((JavaUtilDate *) [[[JavaUtilDate alloc] init] autorelease]) getTime];
  BOOL remove = NO;
  if (currentBanner_ != nil) {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannersController_LOGTAG_ withNSString:[NSString stringWithFormat:@"onTick current %@ expired %@ display %@ %@ %@" , currentBanner_.title, [currentBanner_ isDisplayTimeExpiredWithLongInt:now], [[[JavaUtilDate alloc] initWithLongInt:[currentBanner_ getLastSeen]] autorelease], [currentBanner_ getFrequency], [currentBanner_ getLength], nil]];
    if (!removeCurrent && ![currentBanner_ isDisplayTimeExpiredWithLongInt:now]) {
      return;
    }
    else {
      remove = YES;
    }
  }
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannersController_LOGTAG_ withNSString:[NSString stringWithFormat:@"onTick %@ banners in Q" , [((JavaUtilPriorityQueue *) NIL_CHK(bannerQ_)) size], nil]];
  ComAdironBusmeApiBannerInfo *banner = ((ComAdironBusmeApiBannerInfo *) [((JavaUtilPriorityQueue *) NIL_CHK(bannerQ_)) poll]);
  while (banner != nil) {
    if ([((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)) shouldBeSeenWithLongInt:now]) {
      [((ComAdironBusmePlatformBusmeActivityController *) NIL_CHK(busmeActivityController_)) addDisplayBannerWithComAdironBusmeApiBannerInfo:banner];
      JreOperatorRetainedAssign(&currentBanner_, banner);
      [((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)) setLastSeenWithLongInt:now];
      [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannersController_LOGTAG_ withNSString:[NSString stringWithFormat:@"onTick displaying %@" , [((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)) getTitle], nil]];
      return;
    }
    banner = ((ComAdironBusmeApiBannerInfo *) [((JavaUtilPriorityQueue *) NIL_CHK(bannerQ_)) poll]);
  }
  if (remove) {
    [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannersController_LOGTAG_ withNSString:[NSString stringWithFormat:@"onTick removing %@" , [((ComAdironBusmeApiBannerInfo *) NIL_CHK(currentBanner_)) getTitle], nil]];
    [((ComAdironBusmePlatformBusmeActivityController *) NIL_CHK(busmeActivityController_)) removeDisplayBannerWithComAdironBusmeApiBannerInfo:currentBanner_];
    JreOperatorRetainedAssign(&currentBanner_, nil);
  }
}

+ (void)initialize {
  if (self == [ComAdironBusmePlatformBannersController class]) {
    JreOperatorRetainedAssign(&ComAdironBusmePlatformBannersController_LOGTAG_, [[IOSClass classWithClass:[ComAdironBusmePlatformBannersController class]] getName]);
  }
}

- (void)dealloc {
  JreOperatorRetainedAssign(&updateTask_, nil);
  JreOperatorRetainedAssign(&starter_, nil);
  JreOperatorRetainedAssign(&currentBanner_, nil);
  JreOperatorRetainedAssign(&busmeActivityController_, nil);
  JreOperatorRetainedAssign(&activityAPI_, nil);
  JreOperatorRetainedAssign(&bannerQ_, nil);
  JreOperatorRetainedAssign(&comparator_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmePlatformBannersController *typedCopy = (ComAdironBusmePlatformBannersController *) copy;
  typedCopy.comparator = comparator_;
  typedCopy.bannerQ = bannerQ_;
  typedCopy.activityAPI = activityAPI_;
  typedCopy.busmeActivityController = busmeActivityController_;
  typedCopy.currentBanner = currentBanner_;
  typedCopy.starter = starter_;
  typedCopy.stopped = stopped_;
  typedCopy.updateTask = updateTask_;
}

@end
@implementation ComAdironBusmePlatformBannersController_Starter

- (ComAdironBusmePlatformBannersController *)this$0 {
  return this$0_;
}
- (void)setThis$0:(ComAdironBusmePlatformBannersController *)this$0 {
  JreOperatorRetainedAssign(&this$0_, this$0);
}
@synthesize this$0 = this$0_;

- (void)run {
  if ([((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) isReady]) {
    if (!this$0_.stopped) {
      ComAdironBusmePlatformHandler *handler = [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) getUIHandler];
      if (handler != nil) {
        [handler postDelayedWithJavaLangRunnable:this$0_.updateTask withLongInt:[((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) getBannerRefreshRate]];
      }
    }
    this$0_.starter = nil;
  }
  else {
    ComAdironBusmePlatformHandler *handler = [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) getUIHandler];
    if (handler != nil) {
      [handler postDelayedWithJavaLangRunnable:self withLongInt:10000];
    }
  }
}

- (id)initWithComAdironBusmePlatformBannersController:(ComAdironBusmePlatformBannersController *)outer$ {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&this$0_, outer$);
  }
  return self;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&this$0_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmePlatformBannersController_Starter *typedCopy = (ComAdironBusmePlatformBannersController_Starter *) copy;
  typedCopy.this$0 = this$0_;
}

@end
@implementation ComAdironBusmePlatformBannersController_$1

- (int)compareWithId:(ComAdironBusmeApiBannerInfo *)lhs
              withId:(ComAdironBusmeApiBannerInfo *)rhs {
  long long int now = [((JavaUtilDate *) [[[JavaUtilDate alloc] init] autorelease]) getTime];
  int time = [JavaLangDouble compareWithDouble:[((ComAdironBusmeApiBannerInfo *) NIL_CHK(lhs)) nextTimeWithLongInt:now] withDouble:[((ComAdironBusmeApiBannerInfo *) NIL_CHK(rhs)) nextTimeWithLongInt:now]];
  if (time == 0) {
    return [JavaLangDouble compareWithDouble:[((ComAdironBusmeApiBannerInfo *) NIL_CHK(lhs)) getPriority] withDouble:[((ComAdironBusmeApiBannerInfo *) NIL_CHK(rhs)) getPriority]];
  }
  else {
    return time;
  }
}

- (id)init {
  return [super init];
}

- (void)dealloc {
  [super dealloc];
}

@end
@implementation ComAdironBusmePlatformBannersController_$2

- (ComAdironBusmePlatformBannersController *)this$0 {
  return this$0_;
}
- (void)setThis$0:(ComAdironBusmePlatformBannersController *)this$0 {
  JreOperatorRetainedAssign(&this$0_, this$0);
}
@synthesize this$0 = this$0_;

- (void)run {
  [this$0_ onTick];
  ComAdironBusmePlatformHandler *handler = [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) getUIHandler];
  if (handler != nil) {
    [handler postDelayedWithJavaLangRunnable:self withLongInt:[((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) getBannerRefreshRate]];
  }
}

- (id)initWithComAdironBusmePlatformBannersController:(ComAdironBusmePlatformBannersController *)outer$ {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&this$0_, outer$);
  }
  return self;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&this$0_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmePlatformBannersController_$2 *typedCopy = (ComAdironBusmePlatformBannersController_$2 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
