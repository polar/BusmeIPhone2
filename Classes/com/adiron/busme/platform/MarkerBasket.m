//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/src/main/java/com/adiron/busme/platform/MarkerBasket.java
//
//  Created by polar on 5/25/13.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "com/adiron/busme/api/MarkerInfo.h"
#import "com/adiron/busme/integration/GeoPoint.h"
#import "com/adiron/busme/platform/ActivityAPI.h"
#import "com/adiron/busme/platform/BusmeActivityController.h"
#import "com/adiron/busme/platform/GeoCalc.h"
#import "com/adiron/busme/platform/Handler.h"
#import "com/adiron/busme/platform/Location.h"
#import "com/adiron/busme/platform/LocationManager.h"
#import "com/adiron/busme/platform/Log.h"
#import "com/adiron/busme/platform/MarkerBasket.h"
#import "java/util/Collection.h"
#import "java/util/HashMap.h"
#import "java/util/Iterator.h"
#import "java/util/Map.h"

@implementation ComAdironBusmePlatformMarkerBasket

static NSString * ComAdironBusmePlatformMarkerBasket_LOGTAG_;

- (ComAdironBusmePlatformActivityAPI *)activityAPI {
  return activityAPI_;
}
- (void)setActivityAPI:(ComAdironBusmePlatformActivityAPI *)activityAPI {
  JreOperatorRetainedAssign(&activityAPI_, activityAPI);
}
@synthesize activityAPI = activityAPI_;
- (ComAdironBusmePlatformLocationManager *)locationManager {
  return locationManager_;
}
- (void)setLocationManager:(ComAdironBusmePlatformLocationManager *)locationManager {
  JreOperatorRetainedAssign(&locationManager_, locationManager);
}
@synthesize locationManager = locationManager_;
- (id<JavaUtilMap>)markers {
  return markers_;
}
- (void)setMarkers:(id<JavaUtilMap>)markers {
  JreOperatorRetainedAssign(&markers_, markers);
}
@synthesize markers = markers_;
- (ComAdironBusmePlatformBusmeActivityController *)busmeActivityController {
  return busmeActivityController_;
}
- (void)setBusmeActivityController:(ComAdironBusmePlatformBusmeActivityController *)busmeActivityController {
  JreOperatorRetainedAssign(&busmeActivityController_, busmeActivityController);
}
@synthesize busmeActivityController = busmeActivityController_;
- (ComAdironBusmePlatformMarkerBasket_Starter *)starter {
  return starter_;
}
- (void)setStarter:(ComAdironBusmePlatformMarkerBasket_Starter *)starter {
  JreOperatorRetainedAssign(&starter_, starter);
}
@synthesize starter = starter_;
@synthesize stopped = stopped_;

+ (NSString *)LOGTAG {
  return ComAdironBusmePlatformMarkerBasket_LOGTAG_;
}

- (id)initWithComAdironBusmePlatformActivityAPI:(ComAdironBusmePlatformActivityAPI *)api
withComAdironBusmePlatformBusmeActivityController:(ComAdironBusmePlatformBusmeActivityController *)controller {
  if ((self = [super init])) {
    stopped_ = NO;
    JreOperatorRetainedAssign(&busmeActivityController_, controller);
    JreOperatorRetainedAssign(&activityAPI_, api);
    JreOperatorRetainedAssign(&markers_, [[[JavaUtilHashMap alloc] init] autorelease]);
  }
  return self;
}

- (void)start {
  stopped_ = NO;
  if (starter_ == nil) {
    JreOperatorRetainedAssign(&starter_, [[[ComAdironBusmePlatformMarkerBasket_Starter alloc] initWithComAdironBusmePlatformMarkerBasket:self] autorelease]);
    [starter_ run];
  }
}

- (void)stop {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformMarkerBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"stop(): removeUpdates : locationManager = %@", locationManager_]];
  [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) removeUpdatesWithComAdironBusmePlatformLocationListener:self];
  stopped_ = YES;
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformMarkerBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"stop(): after_removeUpdates : locationManager = %@", locationManager_]];
}

- (void)onLocationChangedWithComAdironBusmePlatformLocation:(ComAdironBusmePlatformLocation *)location {
  ComAdironBusmeIntegrationGeoPoint *point = [ComAdironBusmePlatformGeoCalc toGeoPointWithComAdironBusmePlatformLocation:location];
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilCollection>) [((id<JavaUtilMap>) NIL_CHK(markers_)) values]) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      ComAdironBusmeApiMarkerInfo *marker = ((ComAdironBusmeApiMarkerInfo *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      int dist = [((ComAdironBusmeIntegrationGeoPoint *) NIL_CHK(point)) distanceToWithOrgOsmdroidApiIGeoPoint:((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).point];
      [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformMarkerBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"onLocationChanged: marker(%@,dist=%@,radius=%@,seen=%@)" , ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).title, dist, ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).radius, ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).seen, nil]];
      if (dist < ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).radius) {
        if (!((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).seen) {
          [((ComAdironBusmePlatformBusmeActivityController *) NIL_CHK(busmeActivityController_)) addDisplayMarkerWithComAdironBusmeApiMarkerInfo:marker];
        }
      }
      else {
        [((ComAdironBusmePlatformBusmeActivityController *) NIL_CHK(busmeActivityController_)) removeDisplayMarkerWithComAdironBusmeApiMarkerInfo:marker];
        ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).seen = NO;
      }
    }
  }
}

- (BOOL)addMarkerWithComAdironBusmeApiMarkerInfo:(ComAdironBusmeApiMarkerInfo *)marker {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformMarkerBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"addMarker(%@): marker(%@,id=%@,radius=%@,seen=%@)" , self, ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).title, ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).id_, ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).radius, ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).seen, nil]];
  ComAdironBusmeApiMarkerInfo *m = ((ComAdironBusmeApiMarkerInfo *) [((id<JavaUtilMap>) NIL_CHK(markers_)) getWithId:((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).id_]);
  [((id<JavaUtilMap>) NIL_CHK(markers_)) putWithId:((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).id_ withId:marker];
  return m != nil;
}

- (void)removeMarkerWithComAdironBusmeApiMarkerInfo:(ComAdironBusmeApiMarkerInfo *)marker {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformMarkerBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"removeMarker(%@): marker(%@,id=%@,radius=%@)" , self, ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).title, ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).id_, ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).radius, nil]];
  if (marker != nil) {
    [((id<JavaUtilMap>) NIL_CHK(markers_)) removeWithId:marker.id_];
  }
}

- (void)removeMarkerWithNSString:(NSString *)id_ {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformMarkerBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"removeMarker(%@: marker(id=%@)" , self, id_, nil]];
  [((id<JavaUtilMap>) NIL_CHK(markers_)) removeWithId:id_];
}

- (void)onProviderDisabledWithNSString:(NSString *)provider {
}

- (void)onProviderEnabledWithNSString:(NSString *)provider {
}

- (void)onStatusChangedWithNSString:(NSString *)provider
                            withInt:(int)status {
}

- (id<JavaUtilCollection>)getMarkers {
  [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformMarkerBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"getMarkers(%@): returning(size=%@)" , self, [((id<JavaUtilMap>) NIL_CHK(markers_)) size], nil]];
  return ((id<JavaUtilCollection>) [((id<JavaUtilMap>) NIL_CHK(markers_)) values]);
}

- (void)resetSeenMarkers {
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilCollection>) [((id<JavaUtilMap>) NIL_CHK(markers_)) values]) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      ComAdironBusmeApiMarkerInfo *marker = ((ComAdironBusmeApiMarkerInfo *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      ((ComAdironBusmeApiMarkerInfo *) NIL_CHK(marker)).seen = NO;
    }
  }
}

+ (void)initialize {
  if (self == [ComAdironBusmePlatformMarkerBasket class]) {
    JreOperatorRetainedAssign(&ComAdironBusmePlatformMarkerBasket_LOGTAG_, [[IOSClass classWithClass:[ComAdironBusmePlatformMarkerBasket class]] getName]);
  }
}

- (void)dealloc {
  JreOperatorRetainedAssign(&starter_, nil);
  JreOperatorRetainedAssign(&busmeActivityController_, nil);
  JreOperatorRetainedAssign(&markers_, nil);
  JreOperatorRetainedAssign(&locationManager_, nil);
  JreOperatorRetainedAssign(&activityAPI_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmePlatformMarkerBasket *typedCopy = (ComAdironBusmePlatformMarkerBasket *) copy;
  typedCopy.activityAPI = activityAPI_;
  typedCopy.locationManager = locationManager_;
  typedCopy.markers = markers_;
  typedCopy.busmeActivityController = busmeActivityController_;
  typedCopy.starter = starter_;
  typedCopy.stopped = stopped_;
}

@end
@implementation ComAdironBusmePlatformMarkerBasket_Starter

- (ComAdironBusmePlatformMarkerBasket *)this$0 {
  return this$0_;
}
- (void)setThis$0:(ComAdironBusmePlatformMarkerBasket *)this$0 {
  JreOperatorRetainedAssign(&this$0_, this$0);
}
@synthesize this$0 = this$0_;

- (void)run {
  if ([((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) isReady]) {
    if (!this$0_.stopped) {
      [ComAdironBusmePlatformLog dWithNSString:[ComAdironBusmePlatformMarkerBasket LOGTAG] withNSString:@"starting LocationUpdates"];
      [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) requestLocationUpdatesWithInt:[((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) getPostlocTimeRate] withInt:[((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) getPostlocDistRate] withComAdironBusmePlatformLocationListener:this$0_];
    }
    this$0_.starter = nil;
  }
  else {
    [ComAdironBusmePlatformLog dWithNSString:[ComAdironBusmePlatformMarkerBasket LOGTAG] withNSString:@"Delaying marker updates until api is ready."];
    ComAdironBusmePlatformHandler *handler = [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) getUIHandler];
    if (handler != nil) {
      [handler postDelayedWithJavaLangRunnable:self withLongInt:10000];
    }
  }
}

- (id)initWithComAdironBusmePlatformMarkerBasket:(ComAdironBusmePlatformMarkerBasket *)outer$ {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&this$0_, outer$);
  }
  return self;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&this$0_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmePlatformMarkerBasket_Starter *typedCopy = (ComAdironBusmePlatformMarkerBasket_Starter *) copy;
  typedCopy.this$0 = this$0_;
}

@end
