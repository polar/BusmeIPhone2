//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/src/main/java/com/adiron/busme/platform/BannerBasket.java
//
//  Created by polar on 5/25/13.
//

#import "IOSClass.h"
#import "IOSObjectArray.h"
#import "com/adiron/busme/api/BannerInfo.h"
#import "com/adiron/busme/integration/GeoPoint.h"
#import "com/adiron/busme/platform/ActivityAPI.h"
#import "com/adiron/busme/platform/BannerBasket.h"
#import "com/adiron/busme/platform/BannerStore.h"
#import "com/adiron/busme/platform/BannersController.h"
#import "com/adiron/busme/platform/GeoCalc.h"
#import "com/adiron/busme/platform/Handler.h"
#import "com/adiron/busme/platform/Location.h"
#import "com/adiron/busme/platform/Log.h"
#import "java/util/Collection.h"
#import "java/util/Date.h"
#import "java/util/Iterator.h"

@implementation ComAdironBusmePlatformBannerBasket

static NSString * ComAdironBusmePlatformBannerBasket_LOGTAG_;

- (ComAdironBusmePlatformActivityAPI *)activityAPI {
  return activityAPI_;
}
- (void)setActivityAPI:(ComAdironBusmePlatformActivityAPI *)activityAPI {
  JreOperatorRetainedAssign(&activityAPI_, activityAPI);
}
@synthesize activityAPI = activityAPI_;
- (ComAdironBusmePlatformBannerStore *)bannerStore {
  return bannerStore_;
}
- (void)setBannerStore:(ComAdironBusmePlatformBannerStore *)bannerStore {
  JreOperatorRetainedAssign(&bannerStore_, bannerStore);
}
@synthesize bannerStore = bannerStore_;
- (ComAdironBusmePlatformBannersController *)bannerController {
  return bannerController_;
}
- (void)setBannerController:(ComAdironBusmePlatformBannersController *)bannerController {
  JreOperatorRetainedAssign(&bannerController_, bannerController);
}
@synthesize bannerController = bannerController_;
- (ComAdironBusmePlatformBannerBasket_Starter *)starter {
  return starter_;
}
- (void)setStarter:(ComAdironBusmePlatformBannerBasket_Starter *)starter {
  JreOperatorRetainedAssign(&starter_, starter);
}
@synthesize starter = starter_;
@synthesize stopped = stopped_;

+ (NSString *)LOGTAG {
  return ComAdironBusmePlatformBannerBasket_LOGTAG_;
}

- (ComAdironBusmePlatformBannerStore *)getBannerStore {
  return bannerStore_;
}

- (void)setBannerStoreWithComAdironBusmePlatformBannerStore:(ComAdironBusmePlatformBannerStore *)bannerStore {
  self.bannerStore = bannerStore;
}

- (ComAdironBusmePlatformActivityAPI *)getActivityAPI {
  return activityAPI_;
}

- (id)initWithComAdironBusmePlatformActivityAPI:(ComAdironBusmePlatformActivityAPI *)api
          withComAdironBusmePlatformBannerStore:(ComAdironBusmePlatformBannerStore *)store
    withComAdironBusmePlatformBannersController:(ComAdironBusmePlatformBannersController *)controller {
  if ((self = [super init])) {
    stopped_ = NO;
    JreOperatorRetainedAssign(&bannerStore_, store);
    JreOperatorRetainedAssign(&activityAPI_, api);
    JreOperatorRetainedAssign(&bannerController_, controller);
  }
  return self;
}

- (id<JavaUtilCollection>)getBanners {
  return [((ComAdironBusmePlatformBannerStore *) NIL_CHK(bannerStore_)) getBanners];
}

- (BOOL)addBannerWithComAdironBusmeApiBannerInfo:(ComAdironBusmeApiBannerInfo *)info {
  return [((ComAdironBusmePlatformBannerStore *) NIL_CHK(bannerStore_)) addBannerWithComAdironBusmeApiBannerInfo:info];
}

- (void)removeBannerWithNSString:(NSString *)key {
  [((ComAdironBusmePlatformBannerStore *) NIL_CHK(bannerStore_)) removeBannerWithNSString:key];
}

- (void)start {
  stopped_ = NO;
  if (starter_ == nil) {
    JreOperatorRetainedAssign(&starter_, [[[ComAdironBusmePlatformBannerBasket_Starter alloc] initWithComAdironBusmePlatformBannerBasket:self] autorelease]);
    [starter_ run];
  }
}

- (void)stop {
  [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(activityAPI_)) removeUpdatesWithComAdironBusmePlatformLocationListener:self];
  stopped_ = YES;
}

- (void)onLocationChangedWithComAdironBusmePlatformLocation:(ComAdironBusmePlatformLocation *)location {
  ComAdironBusmeIntegrationGeoPoint *point = [ComAdironBusmePlatformGeoCalc toGeoPointWithComAdironBusmePlatformLocation:location];
  long long int now = [((JavaUtilDate *) [[[JavaUtilDate alloc] init] autorelease]) getTime];
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [[self getBanners] iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      ComAdironBusmeApiBannerInfo *banner = ((ComAdironBusmeApiBannerInfo *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      int dist = [((ComAdironBusmeIntegrationGeoPoint *) NIL_CHK(point)) distanceToWithOrgOsmdroidApiIGeoPoint:[((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)) getPoint]];
      [ComAdironBusmePlatformLog dWithNSString:ComAdironBusmePlatformBannerBasket_LOGTAG_ withNSString:[NSString stringWithFormat:@"onLocationChanged: marker(%@,dist=%@,radius=%@,seen=%@)" , [((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)) getTitle], dist, [((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)) getRadius], [((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)) isSeen], nil]];
      if (dist < [((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)) getRadius]) {
        if ([((ComAdironBusmeApiBannerInfo *) NIL_CHK(banner)) shouldBeSeenWithLongInt:now]) {
          [((ComAdironBusmePlatformBannersController *) NIL_CHK(bannerController_)) addBannerWithComAdironBusmeApiBannerInfo:banner];
        }
      }
      else {
        [((ComAdironBusmePlatformBannersController *) NIL_CHK(bannerController_)) removeBannerWithComAdironBusmeApiBannerInfo:banner];
      }
    }
  }
}

- (void)onProviderDisabledWithNSString:(NSString *)provider {
}

- (void)onProviderEnabledWithNSString:(NSString *)provider {
}

- (void)onStatusChangedWithNSString:(NSString *)provider
                            withInt:(int)status {
}

+ (void)initialize {
  if (self == [ComAdironBusmePlatformBannerBasket class]) {
    JreOperatorRetainedAssign(&ComAdironBusmePlatformBannerBasket_LOGTAG_, [[IOSClass classWithClass:[ComAdironBusmePlatformBannerBasket class]] getName]);
  }
}

- (void)dealloc {
  JreOperatorRetainedAssign(&starter_, nil);
  JreOperatorRetainedAssign(&bannerController_, nil);
  JreOperatorRetainedAssign(&bannerStore_, nil);
  JreOperatorRetainedAssign(&activityAPI_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmePlatformBannerBasket *typedCopy = (ComAdironBusmePlatformBannerBasket *) copy;
  typedCopy.activityAPI = activityAPI_;
  typedCopy.bannerStore = bannerStore_;
  typedCopy.bannerController = bannerController_;
  typedCopy.starter = starter_;
  typedCopy.stopped = stopped_;
}

@end
@implementation ComAdironBusmePlatformBannerBasket_Starter

- (ComAdironBusmePlatformBannerBasket *)this$0 {
  return this$0_;
}
- (void)setThis$0:(ComAdironBusmePlatformBannerBasket *)this$0 {
  JreOperatorRetainedAssign(&this$0_, this$0);
}
@synthesize this$0 = this$0_;

- (void)run {
  if ([((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) isReady]) {
    if (!this$0_.stopped) {
      [ComAdironBusmePlatformLog dWithNSString:[ComAdironBusmePlatformBannerBasket LOGTAG] withNSString:@"starting LocationUpdates"];
      [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) requestLocationUpdatesWithInt:[((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) getPostlocTimeRate] withInt:[((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) getPostlocDistRate] withComAdironBusmePlatformLocationListener:this$0_];
    }
    this$0_.starter = nil;
  }
  else {
    [ComAdironBusmePlatformLog dWithNSString:[ComAdironBusmePlatformBannerBasket LOGTAG] withNSString:@"Delaying marker updates until api is ready."];
    ComAdironBusmePlatformHandler *handler = [((ComAdironBusmePlatformActivityAPI *) NIL_CHK(this$0_.activityAPI)) getUIHandler];
    if (handler != nil) {
      [handler postDelayedWithJavaLangRunnable:self withLongInt:10000];
    }
  }
}

- (id)initWithComAdironBusmePlatformBannerBasket:(ComAdironBusmePlatformBannerBasket *)outer$ {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&this$0_, outer$);
  }
  return self;
}

- (void)dealloc {
  JreOperatorRetainedAssign(&this$0_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  ComAdironBusmePlatformBannerBasket_Starter *typedCopy = (ComAdironBusmePlatformBannerBasket_Starter *) copy;
  typedCopy.this$0 = this$0_;
}

@end
